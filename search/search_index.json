{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 test mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"test mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"1/","text":"\u52a0\u4eae L A T E X","title":"page 1"},{"location":"2/","text":"","title":"page 2"},{"location":"3/","text":"","title":"page 3"},{"location":"first/","text":"Openssl \u00b6 \u4fee\u6539openssl.conf\u914d\u7f6e\u6587\u4ef6 \u8fd0\u884copenssl version -a \u914d\u7f6e\u6587\u4ef6\u5728OPENSSLDIR\u76ee\u5f55\u4e0b \u4fee\u6539\u6587\u4ef6\u4e2d\u7684\u90e8\u5206\u5185\u5bb9\u5982\u4e0b\uff0c\u6700\u540e\u4e24\u884c\u6839\u636e\u81ea\u5df1\u7684\u57df\u540d\u5904\u7406 [ v3_req ] # Extensions to add to a certificate request basicConstraints = CA:FALSE keyUsage = nonRepudiation, digitalSignature, keyEncipherment subjectAltName = @alt_names #\u65b0\u589e [alt_names] #\u65b0\u589e DNS.1 = *.dengyan.com #\u65b0\u589e DNS.2 = dengyan.com #\u65b0\u589e \u4fee\u6539/ets/hosts\u6587\u4ef6\uff0c\u589e\u52a0\u4e00\u884c 127.0.0.1 www.dengyan.com \u7528\u4e8e\u5c06\u5bf9www.dengyan.com\u7684\u8bbf\u95ee\u89e3\u6790\u5230127.0.0.1 \u4e0b\u9762\u5f00\u59cb\u8fdb\u884c\u5bc6\u94a5\u90e8\u5206\u7684\u5de5\u4f5c 1.\u751f\u6210CA\u79d8\u94a5 openssl genrsa -out ca.key 2048 2.\u7b7e\u7f72CA\uff0c\u751f\u6210\u6839\u8bc1\u4e66 openssl req -sha256 -new -x509 -days 3650 -key ca.key -out ca.crt -newkey rsa:2048 3.\u67e5\u770b\u8bc1\u4e66\u5185\u5bb9 openssl x509 -noout -text -in ca.crt 4.\u751f\u6210\u670d\u52a1\u5668\u79d8\u94a5 openssl genrsa -out server.key 2048 5.\u751f\u6210\u670d\u52a1\u5668\u8bc1\u4e66\u8bf7\u6c42\uff0c\u6ce8\u610fCountry Name\u3001State\u3001Locality Name\u548cOrganization Name\u6700\u597d\u4e0eCA\u8bc1\u4e66\u586b\u5199\u7684\u5185\u5bb9\u4e00\u81f4\u3002 openssl req -new -sha256 -key server.key -reqexts v3_req -out server.csr 6.CA\u8bc1\u4e66\u548cCA\u79d8\u94a5\u7b7e\u53d1\u670d\u52a1\u5668\u8bc1\u4e66 openssl ca -in server.csr -md sha256 -keyfile ca.key -cert ca.crt -extensions v3_req -out server.crt \u82e5\u9047\u5230\u5982\u4e0b\u95ee\u9898 I am unable to access the ./demoCA/newcerts directory ./demoCA/newcerts: No such file or directory \u89e3\u51b3\u529e\u6cd5 mkdir -p demoCA/newcerts touch demoCA/index.txt echo 00 > demoCA/serial \u518d\u6b21\u8fd0\u884c \u5c06ca.crt\u5bfc\u5165\u6d4f\u89c8\u5668(MacOs\u5219\u5bfc\u5165\u672c\u673a)","title":"Openssl"},{"location":"first/#openssl","text":"\u4fee\u6539openssl.conf\u914d\u7f6e\u6587\u4ef6 \u8fd0\u884copenssl version -a \u914d\u7f6e\u6587\u4ef6\u5728OPENSSLDIR\u76ee\u5f55\u4e0b \u4fee\u6539\u6587\u4ef6\u4e2d\u7684\u90e8\u5206\u5185\u5bb9\u5982\u4e0b\uff0c\u6700\u540e\u4e24\u884c\u6839\u636e\u81ea\u5df1\u7684\u57df\u540d\u5904\u7406 [ v3_req ] # Extensions to add to a certificate request basicConstraints = CA:FALSE keyUsage = nonRepudiation, digitalSignature, keyEncipherment subjectAltName = @alt_names #\u65b0\u589e [alt_names] #\u65b0\u589e DNS.1 = *.dengyan.com #\u65b0\u589e DNS.2 = dengyan.com #\u65b0\u589e \u4fee\u6539/ets/hosts\u6587\u4ef6\uff0c\u589e\u52a0\u4e00\u884c 127.0.0.1 www.dengyan.com \u7528\u4e8e\u5c06\u5bf9www.dengyan.com\u7684\u8bbf\u95ee\u89e3\u6790\u5230127.0.0.1 \u4e0b\u9762\u5f00\u59cb\u8fdb\u884c\u5bc6\u94a5\u90e8\u5206\u7684\u5de5\u4f5c 1.\u751f\u6210CA\u79d8\u94a5 openssl genrsa -out ca.key 2048 2.\u7b7e\u7f72CA\uff0c\u751f\u6210\u6839\u8bc1\u4e66 openssl req -sha256 -new -x509 -days 3650 -key ca.key -out ca.crt -newkey rsa:2048 3.\u67e5\u770b\u8bc1\u4e66\u5185\u5bb9 openssl x509 -noout -text -in ca.crt 4.\u751f\u6210\u670d\u52a1\u5668\u79d8\u94a5 openssl genrsa -out server.key 2048 5.\u751f\u6210\u670d\u52a1\u5668\u8bc1\u4e66\u8bf7\u6c42\uff0c\u6ce8\u610fCountry Name\u3001State\u3001Locality Name\u548cOrganization Name\u6700\u597d\u4e0eCA\u8bc1\u4e66\u586b\u5199\u7684\u5185\u5bb9\u4e00\u81f4\u3002 openssl req -new -sha256 -key server.key -reqexts v3_req -out server.csr 6.CA\u8bc1\u4e66\u548cCA\u79d8\u94a5\u7b7e\u53d1\u670d\u52a1\u5668\u8bc1\u4e66 openssl ca -in server.csr -md sha256 -keyfile ca.key -cert ca.crt -extensions v3_req -out server.crt \u82e5\u9047\u5230\u5982\u4e0b\u95ee\u9898 I am unable to access the ./demoCA/newcerts directory ./demoCA/newcerts: No such file or directory \u89e3\u51b3\u529e\u6cd5 mkdir -p demoCA/newcerts touch demoCA/index.txt echo 00 > demoCA/serial \u518d\u6b21\u8fd0\u884c \u5c06ca.crt\u5bfc\u5165\u6d4f\u89c8\u5668(MacOs\u5219\u5bfc\u5165\u672c\u673a)","title":"Openssl"},{"location":"STL%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/allocator/","text":"allocator \u00b6 \u52a0\u4eae","title":"allocator"},{"location":"STL%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/allocator/#allocator","text":"\u52a0\u4eae","title":"allocator"},{"location":"libevent%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/Reactor%E6%A8%A1%E5%BC%8F/","text":"Reactor\u6a21\u5f0f \u00b6 \u2002\u2002\u2002\u2002 Libevent \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u5f00\u6e90\u9ad8\u6027\u80fd\u7f51\u7edc\u5e93\uff0c\u91c7\u7528Reactor\u6a21\u578b\u4ee5\u53caIO\u591a\u8def\u590d\u7528\uff0c\u5b9e\u73b0\u7b80\u5355\uff0c\u4ee3\u7801\u6e05\u6670\uff0c\u662f\u521d\u5b66\u8005\u9002\u5408\u5b66\u4e60\u7684\u6e90\u7801\u4e4b\u4e00\u3002\u6211\u5c06\u4ee5libevent1.4.13\u4f5c\u4e3a\u6e90\u7801\uff0c\u5206\u6790\u5176\u8fd0\u884c\u6d41\u7a0b\u548c\u4e3b\u8981\u5b9e\u73b0\u3002 Reactor \u7684\u4e8b\u4ef6\u5904\u7406\u673a\u5236 \u00b6 \u9996\u5148\u6765\u56de\u60f3\u4e00\u4e0b\u666e\u901a\u51fd\u6570\u8c03\u7528\u7684\u673a\u5236\uff1a\u7a0b\u5e8f\u8c03\u7528\u67d0\u51fd\u6570->\u51fd\u6570\u6267\u884c\uff0c\u7a0b\u5e8f\u7b49\u5f85->\u51fd\u6570\u5c06\u7ed3\u679c\u548c\u63a7\u5236\u6743\u8fd4\u56de\u7ed9\u7a0b\u5e8f->\u7a0b\u5e8f\u7ee7\u7eed\u5904\u7406\u3002 Reactor \u91ca\u4e49\u201c\u53cd\u5e94\u5806\u201d\uff0c\u662f\u4e00\u79cd\u4e8b\u4ef6\u9a71\u52a8\u673a\u5236\u3002\u548c\u666e\u901a\u51fd\u6570\u8c03\u7528\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a\u5e94\u7528 \u7a0b\u5e8f\u4e0d\u662f\u4e3b\u52a8\u7684\u8c03\u7528\u67d0\u4e2a API \u5b8c\u6210\u5904\u7406\uff0c\u800c\u662f\u6070\u6070\u76f8\u53cd\uff0cReactor \u9006\u7f6e\u4e86\u4e8b\u4ef6\u5904\u7406\u6d41\u7a0b\uff0c\u5e94 \u7528\u7a0b\u5e8f\u9700\u8981\u63d0\u4f9b\u76f8\u5e94\u7684\u63a5\u53e3\u5e76\u6ce8\u518c\u5230 Reactor \u4e0a\uff0c\u5982\u679c\u76f8\u5e94\u7684\u65f6\u95f4\u53d1\u751f\uff0cReactor \u5c06\u4e3b\u52a8\u8c03\u7528 \u5e94\u7528\u7a0b\u5e8f\u6ce8\u518c\u7684\u63a5\u53e3\uff0c\u8fd9\u4e9b\u63a5\u53e3\u53c8\u79f0\u4e3a\u201c\u56de\u8c03\u51fd\u6570\u201d\u3002\u4f7f\u7528 Libevent \u4e5f\u662f\u60f3 Libevent \u6846\u67b6\u6ce8 \u518c\u76f8\u5e94\u7684\u4e8b\u4ef6\u548c\u56de\u8c03\u51fd\u6570\uff1b\u5f53\u8fd9\u4e9b\u65f6\u95f4\u53d1\u58f0\u65f6\uff0cLibevent \u4f1a\u8c03\u7528\u8fd9\u4e9b\u56de\u8c03\u51fd\u6570\u5904\u7406\u76f8\u5e94\u7684\u4e8b \u4ef6\uff08I/O \u8bfb\u5199\u3001\u5b9a\u65f6\u548c\u4fe1\u53f7\uff09\u3002 \u7528\u201c\u597d\u83b1\u575e\u539f\u5219\u201d\u6765\u5f62\u5bb9 Reactor \u518d\u5408\u9002\u4e0d\u8fc7\u4e86\uff1a\u4e0d\u8981\u6253\u7535\u8bdd\u7ed9\u6211\u4eec\uff0c\u6211\u4eec\u4f1a\u6253\u7535\u8bdd\u901a \u77e5\u4f60\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a\u4f60\u53bb\u5e94\u8058\u67d0 xx \u516c\u53f8\uff0c\u9762\u8bd5\u7ed3\u675f\u540e\u3002 \u201c\u666e\u901a\u51fd\u6570\u8c03\u7528\u673a\u5236\u201d\u516c\u53f8 HR \u6bd4\u8f83\u61d2\uff0c\u4e0d\u4f1a\u8bb0\u4f60\u7684\u8054\u7cfb\u65b9\u5f0f\uff0c\u90a3\u600e\u4e48\u529e\u5462\uff0c\u4f60\u53ea\u80fd\u9762 \u8bd5\u5b8c\u540e\u81ea\u5df1\u6253\u7535\u8bdd\u53bb\u95ee\u7ed3\u679c\uff1b\u6709\u6ca1\u6709\u88ab\u5f55\u53d6\u554a\uff0c\u8fd8\u662f\u88ab\u636e\u4e86\uff1b \u201cReactor\u201d\u516c\u53f8 HR \u5c31\u8bb0\u4e0b\u4e86\u4f60\u7684\u8054\u7cfb\u65b9\u5f0f\uff0c\u7ed3\u679c\u51fa\u6765\u540e\u4f1a\u4e3b\u52a8\u6253\u7535\u8bdd\u901a\u77e5\u4f60\uff1a\u6709\u6ca1\u6709 \u88ab\u5f55\u53d6\u554a\uff0c\u8fd8\u662f\u88ab\u636e\u4e86\uff1b\u4f60\u4e0d\u7528\u81ea\u5df1\u6253\u7535\u8bdd\u53bb\u95ee\u7ed3\u679c\uff0c\u4e8b\u5b9e\u4e0a\u4e5f\u4e0d\u80fd\uff0c\u4f60\u6ca1\u6709 HR \u7684\u7559\u8054\u7cfb \u65b9\u5f0f\u3002 Reactor \u6a21\u5f0f\u7684\u4f18\u70b9 \u00b6 Reactor \u6a21\u5f0f\u662f\u7f16\u5199\u9ad8\u6027\u80fd\u7f51\u7edc\u670d\u52a1\u5668\u7684\u5fc5\u5907\u6280\u672f\u4e4b\u4e00\uff0c\u5b83\u5177\u6709\u5982\u4e0b\u7684\u4f18\u70b9\uff1a \u54cd\u5e94\u5feb\uff0c\u4e0d\u5fc5\u4e3a\u5355\u4e2a\u540c\u6b65\u65f6\u95f4\u6240\u963b\u585e\uff0c\u867d\u7136 Reactor \u672c\u8eab\u4f9d\u7136\u662f\u540c\u6b65\u7684\uff1b \u7f16\u7a0b\u76f8\u5bf9\u7b80\u5355\uff0c\u53ef\u4ee5\u6700\u5927\u7a0b\u5ea6\u7684\u907f\u514d\u590d\u6742\u7684\u591a\u7ebf\u7a0b\u53ca\u540c\u6b65\u95ee\u9898\uff0c\u5e76\u4e14\u907f\u514d\u4e86\u591a\u7ebf\u7a0b/ \u8fdb\u7a0b\u7684\u5207\u6362\u5f00\u9500\uff1b \u53ef\u6269\u5c55\u6027\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u901a\u8fc7\u589e\u52a0 Reactor \u5b9e\u4f8b\u4e2a\u6570\u6765\u5145\u5206\u5229\u7528 CPU \u8d44\u6e90\uff1b \u53ef\u590d\u7528\u6027\uff0creactor \u6846\u67b6\u672c\u8eab\u4e0e\u5177\u4f53\u4e8b\u4ef6\u5904\u7406\u903b\u8f91\u65e0\u5173\uff0c\u5177\u6709\u5f88\u9ad8\u7684\u590d\u7528\u6027\uff1b Reactor \u6a21\u5f0f\u6846\u67b6 \u00b6 \u4e8b\u4ef6\u6e90 Linux \u4e0a\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0cWindows \u4e0a\u5c31\u662f Socket \u6216\u8005 Handle \u4e86\uff0c\u8fd9\u91cc\u7edf\u4e00\u79f0\u4e3a\u201c\u53e5\u67c4 \u96c6\u201d\uff1b\u7a0b\u5e8f\u5728\u6307\u5b9a\u7684\u53e5\u67c4\u4e0a\u6ce8\u518c\u5173\u5fc3\u7684\u4e8b\u4ef6\uff0c\u6bd4\u5982 I/O \u4e8b\u4ef6\u3002 event demultiplexer\u2014\u2014\u4e8b\u4ef6\u591a\u8def\u5206\u53d1\u673a\u5236 \u7531\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684 I/O \u591a\u8def\u590d\u7528\u673a\u5236\uff0c\u6bd4\u5982 select \u548c epoll\u3002 \u7a0b\u5e8f\u9996\u5148\u5c06\u5176\u5173\u5fc3\u7684\u53e5\u67c4\uff08\u4e8b\u4ef6\u6e90\uff09\u53ca\u5176\u4e8b\u4ef6\u6ce8\u518c\u5230 event demultiplexer \u4e0a\uff1b \u5f53\u6709\u4e8b\u4ef6\u5230\u8fbe\u65f6\uff0cevent demultiplexer \u4f1a\u53d1\u51fa\u901a\u77e5\u201c\u5728\u5df2\u7ecf\u6ce8\u518c\u7684\u53e5\u67c4\u96c6\u4e2d\uff0c\u4e00\u4e2a\u6216\u591a \u4e2a\u53e5\u67c4\u7684\u4e8b\u4ef6\u5df2\u7ecf\u5c31\u7eea\u201d\uff1b \u7a0b\u5e8f\u6536\u5230\u901a\u77e5\u540e\uff0c\u5c31\u53ef\u4ee5\u5728\u975e\u963b\u585e\u7684\u60c5\u51b5\u4e0b\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\u4e86\u3002 \u5bf9\u5e94\u5230 libevent \u4e2d\uff0c\u4f9d\u7136\u662f select\u3001poll\u3001epoll \u7b49\uff0c\u4f46\u662f libevent \u4f7f\u7528\u7ed3\u6784\u4f53 eventop \u8fdb\u884c\u4e86 \u5c01\u88c5\uff0c\u4ee5\u7edf\u4e00\u7684\u63a5\u53e3\u6765\u652f\u6301\u8fd9\u4e9b I/O \u591a\u8def\u590d\u7528\u673a\u5236\uff0c\u8fbe\u5230\u4e86\u5bf9\u5916\u9690\u85cf\u5e95\u5c42\u7cfb\u7edf\u673a\u5236\u7684\u76ee\u7684\u3002 Reactor\u2014\u2014\u53cd\u5e94\u5668 Reactor\uff0c\u662f\u4e8b\u4ef6\u7ba1\u7406\u7684\u63a5\u53e3\uff0c\u5185\u90e8\u4f7f\u7528 event demultiplexer \u6ce8\u518c\u3001\u6ce8\u9500\u4e8b\u4ef6\uff1b\u5e76\u8fd0\u884c\u4e8b \u4ef6\u5faa\u73af\uff0c\u5f53\u6709\u4e8b\u4ef6\u8fdb\u5165\u201c\u5c31\u7eea\u201d\u72b6\u6001\u65f6\uff0c\u8c03\u7528\u6ce8\u518c\u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570\u5904\u7406\u4e8b\u4ef6\u3002 \u5bf9\u5e94\u5230 libevent \u4e2d\uff0c\u5c31\u662f event_base \u7ed3\u6784\u4f53\u3002 \u4e00\u4e2a\u5178\u578b\u7684Reactor\u58f0\u660e\u65b9\u5f0f \u524d\u7f6e\u77e5\u8bc6\u70b9 \u4f1a\u4f7f\u7528\u4e00\u79cdIO\u591a\u8def\u590d\u7528\u6280\u672f\uff0c\u6bd4\u5982select\uff0cpoll\uff0cepoll\uff0ckqueue\uff0c\u7406\u89e3\u5404\u4e2a\u51fd\u6570\u7684\u529f\u80fd\uff0c\u4e0b\u6587\u5c06epoll\u4f5c\u4e3a\u4f8b\u5b50 \u4e86\u89e3\u4fe1\u53f7\u7684\u673a\u5236","title":"Reactor\u6a21\u5f0f"},{"location":"libevent%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/Reactor%E6%A8%A1%E5%BC%8F/#reactor","text":"Libevent \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u5f00\u6e90\u9ad8\u6027\u80fd\u7f51\u7edc\u5e93\uff0c\u91c7\u7528Reactor\u6a21\u578b\u4ee5\u53caIO\u591a\u8def\u590d\u7528\uff0c\u5b9e\u73b0\u7b80\u5355\uff0c\u4ee3\u7801\u6e05\u6670\uff0c\u662f\u521d\u5b66\u8005\u9002\u5408\u5b66\u4e60\u7684\u6e90\u7801\u4e4b\u4e00\u3002\u6211\u5c06\u4ee5libevent1.4.13\u4f5c\u4e3a\u6e90\u7801\uff0c\u5206\u6790\u5176\u8fd0\u884c\u6d41\u7a0b\u548c\u4e3b\u8981\u5b9e\u73b0\u3002","title":"Reactor\u6a21\u5f0f"},{"location":"libevent%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/Reactor%E6%A8%A1%E5%BC%8F/#reactor_1","text":"\u9996\u5148\u6765\u56de\u60f3\u4e00\u4e0b\u666e\u901a\u51fd\u6570\u8c03\u7528\u7684\u673a\u5236\uff1a\u7a0b\u5e8f\u8c03\u7528\u67d0\u51fd\u6570->\u51fd\u6570\u6267\u884c\uff0c\u7a0b\u5e8f\u7b49\u5f85->\u51fd\u6570\u5c06\u7ed3\u679c\u548c\u63a7\u5236\u6743\u8fd4\u56de\u7ed9\u7a0b\u5e8f->\u7a0b\u5e8f\u7ee7\u7eed\u5904\u7406\u3002 Reactor \u91ca\u4e49\u201c\u53cd\u5e94\u5806\u201d\uff0c\u662f\u4e00\u79cd\u4e8b\u4ef6\u9a71\u52a8\u673a\u5236\u3002\u548c\u666e\u901a\u51fd\u6570\u8c03\u7528\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a\u5e94\u7528 \u7a0b\u5e8f\u4e0d\u662f\u4e3b\u52a8\u7684\u8c03\u7528\u67d0\u4e2a API \u5b8c\u6210\u5904\u7406\uff0c\u800c\u662f\u6070\u6070\u76f8\u53cd\uff0cReactor \u9006\u7f6e\u4e86\u4e8b\u4ef6\u5904\u7406\u6d41\u7a0b\uff0c\u5e94 \u7528\u7a0b\u5e8f\u9700\u8981\u63d0\u4f9b\u76f8\u5e94\u7684\u63a5\u53e3\u5e76\u6ce8\u518c\u5230 Reactor \u4e0a\uff0c\u5982\u679c\u76f8\u5e94\u7684\u65f6\u95f4\u53d1\u751f\uff0cReactor \u5c06\u4e3b\u52a8\u8c03\u7528 \u5e94\u7528\u7a0b\u5e8f\u6ce8\u518c\u7684\u63a5\u53e3\uff0c\u8fd9\u4e9b\u63a5\u53e3\u53c8\u79f0\u4e3a\u201c\u56de\u8c03\u51fd\u6570\u201d\u3002\u4f7f\u7528 Libevent \u4e5f\u662f\u60f3 Libevent \u6846\u67b6\u6ce8 \u518c\u76f8\u5e94\u7684\u4e8b\u4ef6\u548c\u56de\u8c03\u51fd\u6570\uff1b\u5f53\u8fd9\u4e9b\u65f6\u95f4\u53d1\u58f0\u65f6\uff0cLibevent \u4f1a\u8c03\u7528\u8fd9\u4e9b\u56de\u8c03\u51fd\u6570\u5904\u7406\u76f8\u5e94\u7684\u4e8b \u4ef6\uff08I/O \u8bfb\u5199\u3001\u5b9a\u65f6\u548c\u4fe1\u53f7\uff09\u3002 \u7528\u201c\u597d\u83b1\u575e\u539f\u5219\u201d\u6765\u5f62\u5bb9 Reactor \u518d\u5408\u9002\u4e0d\u8fc7\u4e86\uff1a\u4e0d\u8981\u6253\u7535\u8bdd\u7ed9\u6211\u4eec\uff0c\u6211\u4eec\u4f1a\u6253\u7535\u8bdd\u901a \u77e5\u4f60\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a\u4f60\u53bb\u5e94\u8058\u67d0 xx \u516c\u53f8\uff0c\u9762\u8bd5\u7ed3\u675f\u540e\u3002 \u201c\u666e\u901a\u51fd\u6570\u8c03\u7528\u673a\u5236\u201d\u516c\u53f8 HR \u6bd4\u8f83\u61d2\uff0c\u4e0d\u4f1a\u8bb0\u4f60\u7684\u8054\u7cfb\u65b9\u5f0f\uff0c\u90a3\u600e\u4e48\u529e\u5462\uff0c\u4f60\u53ea\u80fd\u9762 \u8bd5\u5b8c\u540e\u81ea\u5df1\u6253\u7535\u8bdd\u53bb\u95ee\u7ed3\u679c\uff1b\u6709\u6ca1\u6709\u88ab\u5f55\u53d6\u554a\uff0c\u8fd8\u662f\u88ab\u636e\u4e86\uff1b \u201cReactor\u201d\u516c\u53f8 HR \u5c31\u8bb0\u4e0b\u4e86\u4f60\u7684\u8054\u7cfb\u65b9\u5f0f\uff0c\u7ed3\u679c\u51fa\u6765\u540e\u4f1a\u4e3b\u52a8\u6253\u7535\u8bdd\u901a\u77e5\u4f60\uff1a\u6709\u6ca1\u6709 \u88ab\u5f55\u53d6\u554a\uff0c\u8fd8\u662f\u88ab\u636e\u4e86\uff1b\u4f60\u4e0d\u7528\u81ea\u5df1\u6253\u7535\u8bdd\u53bb\u95ee\u7ed3\u679c\uff0c\u4e8b\u5b9e\u4e0a\u4e5f\u4e0d\u80fd\uff0c\u4f60\u6ca1\u6709 HR \u7684\u7559\u8054\u7cfb \u65b9\u5f0f\u3002","title":"Reactor \u7684\u4e8b\u4ef6\u5904\u7406\u673a\u5236"},{"location":"libevent%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/Reactor%E6%A8%A1%E5%BC%8F/#reactor_2","text":"Reactor \u6a21\u5f0f\u662f\u7f16\u5199\u9ad8\u6027\u80fd\u7f51\u7edc\u670d\u52a1\u5668\u7684\u5fc5\u5907\u6280\u672f\u4e4b\u4e00\uff0c\u5b83\u5177\u6709\u5982\u4e0b\u7684\u4f18\u70b9\uff1a \u54cd\u5e94\u5feb\uff0c\u4e0d\u5fc5\u4e3a\u5355\u4e2a\u540c\u6b65\u65f6\u95f4\u6240\u963b\u585e\uff0c\u867d\u7136 Reactor \u672c\u8eab\u4f9d\u7136\u662f\u540c\u6b65\u7684\uff1b \u7f16\u7a0b\u76f8\u5bf9\u7b80\u5355\uff0c\u53ef\u4ee5\u6700\u5927\u7a0b\u5ea6\u7684\u907f\u514d\u590d\u6742\u7684\u591a\u7ebf\u7a0b\u53ca\u540c\u6b65\u95ee\u9898\uff0c\u5e76\u4e14\u907f\u514d\u4e86\u591a\u7ebf\u7a0b/ \u8fdb\u7a0b\u7684\u5207\u6362\u5f00\u9500\uff1b \u53ef\u6269\u5c55\u6027\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u901a\u8fc7\u589e\u52a0 Reactor \u5b9e\u4f8b\u4e2a\u6570\u6765\u5145\u5206\u5229\u7528 CPU \u8d44\u6e90\uff1b \u53ef\u590d\u7528\u6027\uff0creactor \u6846\u67b6\u672c\u8eab\u4e0e\u5177\u4f53\u4e8b\u4ef6\u5904\u7406\u903b\u8f91\u65e0\u5173\uff0c\u5177\u6709\u5f88\u9ad8\u7684\u590d\u7528\u6027\uff1b","title":"Reactor \u6a21\u5f0f\u7684\u4f18\u70b9"},{"location":"libevent%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/Reactor%E6%A8%A1%E5%BC%8F/#reactor_3","text":"\u4e8b\u4ef6\u6e90 Linux \u4e0a\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0cWindows \u4e0a\u5c31\u662f Socket \u6216\u8005 Handle \u4e86\uff0c\u8fd9\u91cc\u7edf\u4e00\u79f0\u4e3a\u201c\u53e5\u67c4 \u96c6\u201d\uff1b\u7a0b\u5e8f\u5728\u6307\u5b9a\u7684\u53e5\u67c4\u4e0a\u6ce8\u518c\u5173\u5fc3\u7684\u4e8b\u4ef6\uff0c\u6bd4\u5982 I/O \u4e8b\u4ef6\u3002 event demultiplexer\u2014\u2014\u4e8b\u4ef6\u591a\u8def\u5206\u53d1\u673a\u5236 \u7531\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684 I/O \u591a\u8def\u590d\u7528\u673a\u5236\uff0c\u6bd4\u5982 select \u548c epoll\u3002 \u7a0b\u5e8f\u9996\u5148\u5c06\u5176\u5173\u5fc3\u7684\u53e5\u67c4\uff08\u4e8b\u4ef6\u6e90\uff09\u53ca\u5176\u4e8b\u4ef6\u6ce8\u518c\u5230 event demultiplexer \u4e0a\uff1b \u5f53\u6709\u4e8b\u4ef6\u5230\u8fbe\u65f6\uff0cevent demultiplexer \u4f1a\u53d1\u51fa\u901a\u77e5\u201c\u5728\u5df2\u7ecf\u6ce8\u518c\u7684\u53e5\u67c4\u96c6\u4e2d\uff0c\u4e00\u4e2a\u6216\u591a \u4e2a\u53e5\u67c4\u7684\u4e8b\u4ef6\u5df2\u7ecf\u5c31\u7eea\u201d\uff1b \u7a0b\u5e8f\u6536\u5230\u901a\u77e5\u540e\uff0c\u5c31\u53ef\u4ee5\u5728\u975e\u963b\u585e\u7684\u60c5\u51b5\u4e0b\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5904\u7406\u4e86\u3002 \u5bf9\u5e94\u5230 libevent \u4e2d\uff0c\u4f9d\u7136\u662f select\u3001poll\u3001epoll \u7b49\uff0c\u4f46\u662f libevent \u4f7f\u7528\u7ed3\u6784\u4f53 eventop \u8fdb\u884c\u4e86 \u5c01\u88c5\uff0c\u4ee5\u7edf\u4e00\u7684\u63a5\u53e3\u6765\u652f\u6301\u8fd9\u4e9b I/O \u591a\u8def\u590d\u7528\u673a\u5236\uff0c\u8fbe\u5230\u4e86\u5bf9\u5916\u9690\u85cf\u5e95\u5c42\u7cfb\u7edf\u673a\u5236\u7684\u76ee\u7684\u3002 Reactor\u2014\u2014\u53cd\u5e94\u5668 Reactor\uff0c\u662f\u4e8b\u4ef6\u7ba1\u7406\u7684\u63a5\u53e3\uff0c\u5185\u90e8\u4f7f\u7528 event demultiplexer \u6ce8\u518c\u3001\u6ce8\u9500\u4e8b\u4ef6\uff1b\u5e76\u8fd0\u884c\u4e8b \u4ef6\u5faa\u73af\uff0c\u5f53\u6709\u4e8b\u4ef6\u8fdb\u5165\u201c\u5c31\u7eea\u201d\u72b6\u6001\u65f6\uff0c\u8c03\u7528\u6ce8\u518c\u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570\u5904\u7406\u4e8b\u4ef6\u3002 \u5bf9\u5e94\u5230 libevent \u4e2d\uff0c\u5c31\u662f event_base \u7ed3\u6784\u4f53\u3002 \u4e00\u4e2a\u5178\u578b\u7684Reactor\u58f0\u660e\u65b9\u5f0f \u524d\u7f6e\u77e5\u8bc6\u70b9 \u4f1a\u4f7f\u7528\u4e00\u79cdIO\u591a\u8def\u590d\u7528\u6280\u672f\uff0c\u6bd4\u5982select\uff0cpoll\uff0cepoll\uff0ckqueue\uff0c\u7406\u89e3\u5404\u4e2a\u51fd\u6570\u7684\u529f\u80fd\uff0c\u4e0b\u6587\u5c06epoll\u4f5c\u4e3a\u4f8b\u5b50 \u4e86\u89e3\u4fe1\u53f7\u7684\u673a\u5236","title":"Reactor \u6a21\u5f0f\u6846\u67b6"},{"location":"libevent%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/%E6%A0%B8%E5%BF%83%E7%BB%93%E6%9E%84%E4%BD%93/","text":"\u6838\u5fc3\u7ed3\u6784\u4f53 \u00b6 \u4e8b\u4ef6 \u00b6 \u4e00\u4e2a\u4e8b\u4ef6\u4e3b\u8981\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u4fe1\u606f * \u4e8b\u4ef6\u5bf9\u5e94\u7684fd\uff08\u4e00\u4e2a\u4e8b\u4ef6\u5bf9\u5e94\u4e00\u4e2afd\uff09 * fd\u7ed1\u5b9a\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\uff0c\u7528\u4e8e\u5728\u5bf9\u5e94IO\u5c31\u7eea\u65f6\u8c03\u7528\u8be5\u51fd\u6570 * \u76d1\u542c\u7684\u7c7b\u578b * \u7528\u4e8e\u63d2\u5165\u5404\u4e2a\u961f\u5217\u7684\u6307\u9488 \u901a\u5e38\u6211\u4eec\u91c7\u7528event_set\u6765\u521d\u59cb\u5316\u4e00\u4e2aev\uff0c\u8be5\u51fd\u6570\u4e3b\u8981\u5b8c\u6210\u5982\u4e0b\u64cd\u4f5c * \u8bbe\u7f6e\u4e8b\u4ef6 ev \u7ed1\u5b9a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6216\u8005\u4fe1\u53f7\uff0c\u5bf9\u4e8e\u5b9a\u65f6\u4e8b\u4ef6\uff0c\u8bbe\u4e3a-1 \u5373\u53ef\uff1b * \u8bbe\u7f6e\u4e8b\u4ef6\u7c7b\u578b\uff0c\u6bd4\u5982 EV_READ|EV_PERSIST, EV_WRITE, EV_SIGNAL \u7b49\uff1b * \u8bbe\u7f6e\u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570\u4ee5\u53ca\u53c2\u6570 arg\uff1b * \u521d\u59cb\u5316\u5176\u5b83\u5b57\u6bb5\uff0c\u6bd4\u5982\u7f3a\u7701\u7684 event_base \u548c\u4f18\u5148\u7ea7\uff1b void event_set ( struct event * ev , int fd , short events , void ( * callback )( int , short , void * ), void * arg ) struct event { // I/O/Signal\u6ce8\u518c\u4e8b\u4ef6\u961f\u5217 \u94fe\u63a5\u5230event_base.eventqueue TAILQ_ENTRY ( event ) ev_next ; // active\u961f\u5217 \u94fe\u63a5\u5230event_base.activequeues TAILQ_ENTRY ( event ) ev_active_next ; //active list // \u4fe1\u53f7\u4e8b\u4ef6\u961f\u5217 \u94fe\u63a5\u5230event_base.sig.evsigevents TAILQ_ENTRY ( event ) ev_signal_next ; //singnal list // \u65f6\u95f4\u4e8b\u4ef6\u6700\u5c0f\u5806\u4e0b\u6807 \u5b58\u50a8\u5728event_base.timeheap unsigned int min_heap_idx ; /* for managing timeouts*/ //\u8be5\u4e8b\u4ef6\u6240\u5c5e\u7684\u53cd\u5e94\u5806\u5b9e\u4f8b struct event_base * ev_base ; //\u5bf9\u4e8e I/O \u4e8b\u4ef6\uff0c\u662f\u7ed1\u5b9a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff1b\u5bf9\u4e8e signal \u4e8b\u4ef6\uff0c\u662f\u7ed1\u5b9a\u7684\u4fe1\u53f7 int ev_fd ; //\u76d1\u542c\u7684\u7c7b\u578b\uff0cI/O\u4e8b\u4ef6\uff1a EV_WRITE\u548cEV_READ \u5b9a\u65f6\u4e8b\u4ef6\uff1aEV_TIMEOUT \u4fe1\u53f7\uff1a EV_SIGNAL \u8f85\u52a9\u9009\u9879\uff1aEV_PERSIST\uff0c\u8868\u660e\u662f\u4e00\u4e2a\u6c38\u4e45\u4e8b\u4ef6 short ev_events ; //\u4e8b\u4ef6\u5c31\u7eea\u6267\u884c\u65f6\uff0c\u8c03\u7528 ev_callback \u7684\u6b21\u6570\uff0c\u901a\u5e38\u4e3a 1 short ev_ncalls ; //\u901a\u8fc7\u8be5\u53d8\u91cf\u53ef\u4ee5\u5728\u8c03\u7528\u8fc7\u7a0b\u4e2d\u5220\u9664\uff0c\u56e0\u4e3a // \u6709\u4e9bevent\u4f1a\u5728\u56de\u8c03\u51fd\u6570\u4e2d\u5220\u9664\u81ea\u5df1\uff0c\u4f7f\u7528 // \u8be5\u53d8\u91cf\u5c31\u662f\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\uff0c\u8ba9event\u53ef\u4ee5 // \u6b63\u786e\u7684\u5c06\u81ea\u5df1\u4eceevent_loop\u4e2d\u5220\u9664 short * ev_pncalls ; /* Allows deletes in callback */ /* \u6307\u9488\uff0c\u901a\u5e38\u6307\u5411 ev_ncalls \u6216\u8005\u4e3a NULL */ //\u65f6\u95f4\u4e8b\u4ef6\u7684\u8d85\u65f6\u503c\uff0c\u4e0emin_heap_idx\u914d\u5408\u4f7f\u7528\uff0c\u7528\u4e8e\u4e8c\u53c9\u5806\u6392\u5e8f struct timeval ev_timeout ; /* \u4f18\u5148\u7ea7\uff0c\u4e8b\u4ef6\u89e6\u53d1\u540e\u6839\u636e\u4f18\u5148\u7ea7\u653e\u5165\u4e0d\u540cactive\u961f\u5217event_base.activequeues[ev_pri]\u4e2d\uff0cev_pri\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8*/ int ev_pri ; //event \u7684\u56de\u8c03\u51fd\u6570\uff0c\u88ab ev_base \u8c03\u7528 void ( * ev_callback )( int , short , void * arg ); //void (*ev_callback)(int fd, short events, void *arg) void * ev_arg ; // \u5728\u5c31\u7eea\u961f\u5217\u88ab\u56de\u8c03\u7684\u65f6\u5019\uff0c\u8be5\u53d8\u91cf\u8bf4\u660e\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u4ef6\uff0cevent result\u7684\u7b80\u79f0 int ev_res ; /* result passed to event callback */ //\u6807\u5fd7\u4f4d\uff0c\u6807\u5fd7\u8be5event\u5df2\u7ecf\u88ab\u63d2\u5165\u54ea\u51e0\u4e2a\u94fe\u8868\u4e2d,\u4e3aEVLIST_*\u7684\u591a\u79cd\u7ec4\u5408 int ev_flags ; }; Reactor\u53cd\u5e94\u5668 \u00b6 struct event_base { // \u6307\u5411\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u7684io\u591a\u8def\u590d\u7528\u6a21\u578b\uff0c\u8be5\u53d8\u91cf\u5728event_base_new\u8d4b\u503c const struct eventop * evsel ; // evbase\u4e3a evsel->init(base)\u7684\u8fd4\u56de\u503c\uff0c\u7528\u4e8e\u4fdd\u5b58io\u591a\u8def\u590d\u7528\u6a21\u578b\u7684\u4e0a\u4e0b\u6587 void * evbase ; //\u5f53\u524d\u6ce8\u518c\u7684\u4e8b\u4ef6event\u603b\u6570 int event_count ; /* counts number of total events */ //\u5904\u4e8e\u6d3b\u52a8\u961f\u5217\u7684\u4e8b\u4ef6event\u603b\u6570\uff0c\u8fd9\u90e8\u5206\u4e8b\u4ef6\u5df2\u7ecf\u89e6\u53d1\u5373\u5c06\u88ab\u56de\u8c03 int event_count_active ; /* counts number of active events */ int event_gotterm ; /* Set to terminate loop \u6b63\u5e38\u9000\u51fadispatch*/ int event_break ; /* Set to terminate loop immediately \u9a6c\u4e0a\u9000\u51fadispatch*/ /* active event management */ //1. active list active\u961f\u91cc\uff0c\u4e8b\u4ef6\u5df2\u7ecf\u89e6\u53d1\u7b49\u5f85\u56de\u8c03\u901a\u77e5 // - \u6ce8\u518c\u4e00\u4e2a2s\u8ba1\u65f6\u5668\uff0c2s\u8fc7\u540e\u8be5event\u4f1a\u88ab\u653e\u5230active\u961f\u5217\u7b49\u5f85\u56de\u8c03 // - \u6ce8\u518c\u4e00\u4e2asocket\u8bfb\u4e8b\u4ef6,\u5f53socket\u53ef\u8bfb\u4f1a\u5c06socket\u8bfb\u4e8b\u4ef6\u653e\u5230active\u961f\u5217\u7b49\u5f85\u56de\u8c03 //2. \u6307\u9488\u6570\u7ec4\u7684\u539f\u56e0\u662f\u8981\u5b9e\u73b0\u4f18\u5148\u7ea7\u529f\u80fd //3. \u8d8a\u9760\u524d\u4f18\u5148\u7ea7\u8d8a\u5927 /* * activequeues \u662f\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\uff0clibevent \u652f\u6301\u4e8b\u4ef6\u4f18\u5148\u7ea7\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u662f\u6570\u7ec4 * \u5176\u4e2d\u7684\u5143\u7d20 activequeues[priority]\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u94fe\u8868\u7684\u6bcf\u4e2a\u8282\u70b9\u6307\u5411\u4e00\u4e2a\u4f18\u5148\u7ea7\u4e3a priority \u7684\u5c31\u7eea\u4e8b\u4ef6 event\u3002 */ struct event_list ** activequeues ; // activequeues\u4e2d\u7684\u4f18\u5148\u7ea7\u961f\u5217\u6570 int nactivequeues ; /* signal handling info */ struct evsignal_info sig ; //\u4fe1\u53f7\u76f8\u5173 struct event_list eventqueue ; //\u4fdd\u5b58\u4e86\u6240\u6709\u7684\u6ce8\u518c\u4e8b\u4ef6event\u7684\u6307\u9488\u3002\u5411\u8be5\u961f\u5217\u52a0\u5165\u6216\u5220\u9664\u4e8b\u4ef6\u65f6\uff0c\u4f1a\u989d\u5916\u8c03\u7528I/O\u590d\u7528\u6a21\u578b\u7684add\u548cdel\u51fd\u6570 struct timeval event_tv ; /* \u8be6\u60c5\u89c1event_base_loop */ struct min_heap timeheap ; //\u7ba1\u7406\u5b9a\u65f6\u4e8b\u4ef6\u7684\u5c0f\u6839\u5806 struct timeval tv_cache ; //\u8bb0\u5f55\u65f6\u95f4\u7f13\u5b58 };","title":"\u6838\u5fc3\u7ed3\u6784\u4f53"},{"location":"libevent%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/%E6%A0%B8%E5%BF%83%E7%BB%93%E6%9E%84%E4%BD%93/#_1","text":"","title":"\u6838\u5fc3\u7ed3\u6784\u4f53"},{"location":"libevent%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/%E6%A0%B8%E5%BF%83%E7%BB%93%E6%9E%84%E4%BD%93/#_2","text":"\u4e00\u4e2a\u4e8b\u4ef6\u4e3b\u8981\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u4fe1\u606f * \u4e8b\u4ef6\u5bf9\u5e94\u7684fd\uff08\u4e00\u4e2a\u4e8b\u4ef6\u5bf9\u5e94\u4e00\u4e2afd\uff09 * fd\u7ed1\u5b9a\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\uff0c\u7528\u4e8e\u5728\u5bf9\u5e94IO\u5c31\u7eea\u65f6\u8c03\u7528\u8be5\u51fd\u6570 * \u76d1\u542c\u7684\u7c7b\u578b * \u7528\u4e8e\u63d2\u5165\u5404\u4e2a\u961f\u5217\u7684\u6307\u9488 \u901a\u5e38\u6211\u4eec\u91c7\u7528event_set\u6765\u521d\u59cb\u5316\u4e00\u4e2aev\uff0c\u8be5\u51fd\u6570\u4e3b\u8981\u5b8c\u6210\u5982\u4e0b\u64cd\u4f5c * \u8bbe\u7f6e\u4e8b\u4ef6 ev \u7ed1\u5b9a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6216\u8005\u4fe1\u53f7\uff0c\u5bf9\u4e8e\u5b9a\u65f6\u4e8b\u4ef6\uff0c\u8bbe\u4e3a-1 \u5373\u53ef\uff1b * \u8bbe\u7f6e\u4e8b\u4ef6\u7c7b\u578b\uff0c\u6bd4\u5982 EV_READ|EV_PERSIST, EV_WRITE, EV_SIGNAL \u7b49\uff1b * \u8bbe\u7f6e\u4e8b\u4ef6\u7684\u56de\u8c03\u51fd\u6570\u4ee5\u53ca\u53c2\u6570 arg\uff1b * \u521d\u59cb\u5316\u5176\u5b83\u5b57\u6bb5\uff0c\u6bd4\u5982\u7f3a\u7701\u7684 event_base \u548c\u4f18\u5148\u7ea7\uff1b void event_set ( struct event * ev , int fd , short events , void ( * callback )( int , short , void * ), void * arg ) struct event { // I/O/Signal\u6ce8\u518c\u4e8b\u4ef6\u961f\u5217 \u94fe\u63a5\u5230event_base.eventqueue TAILQ_ENTRY ( event ) ev_next ; // active\u961f\u5217 \u94fe\u63a5\u5230event_base.activequeues TAILQ_ENTRY ( event ) ev_active_next ; //active list // \u4fe1\u53f7\u4e8b\u4ef6\u961f\u5217 \u94fe\u63a5\u5230event_base.sig.evsigevents TAILQ_ENTRY ( event ) ev_signal_next ; //singnal list // \u65f6\u95f4\u4e8b\u4ef6\u6700\u5c0f\u5806\u4e0b\u6807 \u5b58\u50a8\u5728event_base.timeheap unsigned int min_heap_idx ; /* for managing timeouts*/ //\u8be5\u4e8b\u4ef6\u6240\u5c5e\u7684\u53cd\u5e94\u5806\u5b9e\u4f8b struct event_base * ev_base ; //\u5bf9\u4e8e I/O \u4e8b\u4ef6\uff0c\u662f\u7ed1\u5b9a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff1b\u5bf9\u4e8e signal \u4e8b\u4ef6\uff0c\u662f\u7ed1\u5b9a\u7684\u4fe1\u53f7 int ev_fd ; //\u76d1\u542c\u7684\u7c7b\u578b\uff0cI/O\u4e8b\u4ef6\uff1a EV_WRITE\u548cEV_READ \u5b9a\u65f6\u4e8b\u4ef6\uff1aEV_TIMEOUT \u4fe1\u53f7\uff1a EV_SIGNAL \u8f85\u52a9\u9009\u9879\uff1aEV_PERSIST\uff0c\u8868\u660e\u662f\u4e00\u4e2a\u6c38\u4e45\u4e8b\u4ef6 short ev_events ; //\u4e8b\u4ef6\u5c31\u7eea\u6267\u884c\u65f6\uff0c\u8c03\u7528 ev_callback \u7684\u6b21\u6570\uff0c\u901a\u5e38\u4e3a 1 short ev_ncalls ; //\u901a\u8fc7\u8be5\u53d8\u91cf\u53ef\u4ee5\u5728\u8c03\u7528\u8fc7\u7a0b\u4e2d\u5220\u9664\uff0c\u56e0\u4e3a // \u6709\u4e9bevent\u4f1a\u5728\u56de\u8c03\u51fd\u6570\u4e2d\u5220\u9664\u81ea\u5df1\uff0c\u4f7f\u7528 // \u8be5\u53d8\u91cf\u5c31\u662f\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\uff0c\u8ba9event\u53ef\u4ee5 // \u6b63\u786e\u7684\u5c06\u81ea\u5df1\u4eceevent_loop\u4e2d\u5220\u9664 short * ev_pncalls ; /* Allows deletes in callback */ /* \u6307\u9488\uff0c\u901a\u5e38\u6307\u5411 ev_ncalls \u6216\u8005\u4e3a NULL */ //\u65f6\u95f4\u4e8b\u4ef6\u7684\u8d85\u65f6\u503c\uff0c\u4e0emin_heap_idx\u914d\u5408\u4f7f\u7528\uff0c\u7528\u4e8e\u4e8c\u53c9\u5806\u6392\u5e8f struct timeval ev_timeout ; /* \u4f18\u5148\u7ea7\uff0c\u4e8b\u4ef6\u89e6\u53d1\u540e\u6839\u636e\u4f18\u5148\u7ea7\u653e\u5165\u4e0d\u540cactive\u961f\u5217event_base.activequeues[ev_pri]\u4e2d\uff0cev_pri\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8*/ int ev_pri ; //event \u7684\u56de\u8c03\u51fd\u6570\uff0c\u88ab ev_base \u8c03\u7528 void ( * ev_callback )( int , short , void * arg ); //void (*ev_callback)(int fd, short events, void *arg) void * ev_arg ; // \u5728\u5c31\u7eea\u961f\u5217\u88ab\u56de\u8c03\u7684\u65f6\u5019\uff0c\u8be5\u53d8\u91cf\u8bf4\u660e\u53d1\u751f\u4e86\u4ec0\u4e48\u4e8b\u4ef6\uff0cevent result\u7684\u7b80\u79f0 int ev_res ; /* result passed to event callback */ //\u6807\u5fd7\u4f4d\uff0c\u6807\u5fd7\u8be5event\u5df2\u7ecf\u88ab\u63d2\u5165\u54ea\u51e0\u4e2a\u94fe\u8868\u4e2d,\u4e3aEVLIST_*\u7684\u591a\u79cd\u7ec4\u5408 int ev_flags ; };","title":"\u4e8b\u4ef6"},{"location":"libevent%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/%E6%A0%B8%E5%BF%83%E7%BB%93%E6%9E%84%E4%BD%93/#reactor","text":"struct event_base { // \u6307\u5411\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u7684io\u591a\u8def\u590d\u7528\u6a21\u578b\uff0c\u8be5\u53d8\u91cf\u5728event_base_new\u8d4b\u503c const struct eventop * evsel ; // evbase\u4e3a evsel->init(base)\u7684\u8fd4\u56de\u503c\uff0c\u7528\u4e8e\u4fdd\u5b58io\u591a\u8def\u590d\u7528\u6a21\u578b\u7684\u4e0a\u4e0b\u6587 void * evbase ; //\u5f53\u524d\u6ce8\u518c\u7684\u4e8b\u4ef6event\u603b\u6570 int event_count ; /* counts number of total events */ //\u5904\u4e8e\u6d3b\u52a8\u961f\u5217\u7684\u4e8b\u4ef6event\u603b\u6570\uff0c\u8fd9\u90e8\u5206\u4e8b\u4ef6\u5df2\u7ecf\u89e6\u53d1\u5373\u5c06\u88ab\u56de\u8c03 int event_count_active ; /* counts number of active events */ int event_gotterm ; /* Set to terminate loop \u6b63\u5e38\u9000\u51fadispatch*/ int event_break ; /* Set to terminate loop immediately \u9a6c\u4e0a\u9000\u51fadispatch*/ /* active event management */ //1. active list active\u961f\u91cc\uff0c\u4e8b\u4ef6\u5df2\u7ecf\u89e6\u53d1\u7b49\u5f85\u56de\u8c03\u901a\u77e5 // - \u6ce8\u518c\u4e00\u4e2a2s\u8ba1\u65f6\u5668\uff0c2s\u8fc7\u540e\u8be5event\u4f1a\u88ab\u653e\u5230active\u961f\u5217\u7b49\u5f85\u56de\u8c03 // - \u6ce8\u518c\u4e00\u4e2asocket\u8bfb\u4e8b\u4ef6,\u5f53socket\u53ef\u8bfb\u4f1a\u5c06socket\u8bfb\u4e8b\u4ef6\u653e\u5230active\u961f\u5217\u7b49\u5f85\u56de\u8c03 //2. \u6307\u9488\u6570\u7ec4\u7684\u539f\u56e0\u662f\u8981\u5b9e\u73b0\u4f18\u5148\u7ea7\u529f\u80fd //3. \u8d8a\u9760\u524d\u4f18\u5148\u7ea7\u8d8a\u5927 /* * activequeues \u662f\u4e00\u4e2a\u4e8c\u7ea7\u6307\u9488\uff0clibevent \u652f\u6301\u4e8b\u4ef6\u4f18\u5148\u7ea7\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u628a\u5b83\u770b\u4f5c\u662f\u6570\u7ec4 * \u5176\u4e2d\u7684\u5143\u7d20 activequeues[priority]\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u94fe\u8868\u7684\u6bcf\u4e2a\u8282\u70b9\u6307\u5411\u4e00\u4e2a\u4f18\u5148\u7ea7\u4e3a priority \u7684\u5c31\u7eea\u4e8b\u4ef6 event\u3002 */ struct event_list ** activequeues ; // activequeues\u4e2d\u7684\u4f18\u5148\u7ea7\u961f\u5217\u6570 int nactivequeues ; /* signal handling info */ struct evsignal_info sig ; //\u4fe1\u53f7\u76f8\u5173 struct event_list eventqueue ; //\u4fdd\u5b58\u4e86\u6240\u6709\u7684\u6ce8\u518c\u4e8b\u4ef6event\u7684\u6307\u9488\u3002\u5411\u8be5\u961f\u5217\u52a0\u5165\u6216\u5220\u9664\u4e8b\u4ef6\u65f6\uff0c\u4f1a\u989d\u5916\u8c03\u7528I/O\u590d\u7528\u6a21\u578b\u7684add\u548cdel\u51fd\u6570 struct timeval event_tv ; /* \u8be6\u60c5\u89c1event_base_loop */ struct min_heap timeheap ; //\u7ba1\u7406\u5b9a\u65f6\u4e8b\u4ef6\u7684\u5c0f\u6839\u5806 struct timeval tv_cache ; //\u8bb0\u5f55\u65f6\u95f4\u7f13\u5b58 };","title":"Reactor\u53cd\u5e94\u5668"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/","text":"\u52a8\u6001\u89c4\u5212 \u00b6 Node \u4f7f\u7528\u52a8\u6001\u89c4\u5212\u89e3\u51b3\u95ee\u9898\u4e00\u822c\u5206\u4e3a\u4e09\u6b65\uff1a \u8868\u793a\u72b6\u6001 \u627e\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \u8fb9\u754c\u5904\u7406 \u8868\u793a\u72b6\u6001 \u00b6 \u5206\u6790\u95ee\u9898\u7684\u72b6\u6001\u65f6\uff0c\u4e0d\u8981\u5206\u6790\u6574\u4f53\uff0c\u53ea\u5206\u6790\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\u5373\u53ef\uff01\u56e0\u4e3a\u52a8\u6001\u89c4\u5212\u95ee\u9898\u90fd\u662f\u5212\u5206\u4e3a\u591a\u4e2a\u9636\u6bb5\u7684\uff0c\u5404\u4e2a\u9636\u6bb5\u7684\u72b6\u6001\u8868\u793a\u90fd\u662f\u4e00\u6837\uff0c\u800c\u6211\u4eec\u7684\u6700\u7ec8\u7b54\u6848\u5728\u5c31\u662f\u5728\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\u3002 \u627e\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \u00b6 \u627e\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5c31\u662f\u627e\u5404\u4e2a\u9636\u6bb5\u4e4b\u95f4\u7684\u8f6c\u5316\u5173\u7cfb\uff0c\u540c\u6837\u6211\u4eec\u8fd8\u662f\u53ea\u9700\u5206\u6790\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\uff0c\u5206\u6790\u5b83\u7684\u72b6\u6001\u662f\u5982\u4f55\u5f97\u5230\u7684\u3002 \u8fb9\u754c\u5904\u7406 \u00b6 \u8fb9\u754c\u5904\u7406\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u6211\u4eec\u628a\u53ef\u4ee5\u76f4\u63a5\u77e5\u9053\u7684\u72b6\u6001\u521d\u59cb\u5316\u5c31\u597d\u4e86\u3002 \u52a8\u6001\u89c4\u5212\u9898\u76ee \u94fe\u63a5 n\u4e2a\u9ab0\u5b50\u7684\u70b9\u6570 https://leetcode-cn.com/problems/nge-tou-zi-de-dian-shu-lcof/ \u80a1\u7968\u7cfb\u5217 \uff5c https://leetcode-cn.com/circle/article/qiAgHn/","title":"\u52a8\u6001\u89c4\u5212"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_1","text":"Node \u4f7f\u7528\u52a8\u6001\u89c4\u5212\u89e3\u51b3\u95ee\u9898\u4e00\u822c\u5206\u4e3a\u4e09\u6b65\uff1a \u8868\u793a\u72b6\u6001 \u627e\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \u8fb9\u754c\u5904\u7406","title":"\u52a8\u6001\u89c4\u5212"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_2","text":"\u5206\u6790\u95ee\u9898\u7684\u72b6\u6001\u65f6\uff0c\u4e0d\u8981\u5206\u6790\u6574\u4f53\uff0c\u53ea\u5206\u6790\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\u5373\u53ef\uff01\u56e0\u4e3a\u52a8\u6001\u89c4\u5212\u95ee\u9898\u90fd\u662f\u5212\u5206\u4e3a\u591a\u4e2a\u9636\u6bb5\u7684\uff0c\u5404\u4e2a\u9636\u6bb5\u7684\u72b6\u6001\u8868\u793a\u90fd\u662f\u4e00\u6837\uff0c\u800c\u6211\u4eec\u7684\u6700\u7ec8\u7b54\u6848\u5728\u5c31\u662f\u5728\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\u3002","title":"\u8868\u793a\u72b6\u6001"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_3","text":"\u627e\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e5f\u5c31\u662f\u627e\u5404\u4e2a\u9636\u6bb5\u4e4b\u95f4\u7684\u8f6c\u5316\u5173\u7cfb\uff0c\u540c\u6837\u6211\u4eec\u8fd8\u662f\u53ea\u9700\u5206\u6790\u6700\u540e\u4e00\u4e2a\u9636\u6bb5\uff0c\u5206\u6790\u5b83\u7684\u72b6\u6001\u662f\u5982\u4f55\u5f97\u5230\u7684\u3002","title":"\u627e\u51fa\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_4","text":"\u8fb9\u754c\u5904\u7406\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u6211\u4eec\u628a\u53ef\u4ee5\u76f4\u63a5\u77e5\u9053\u7684\u72b6\u6001\u521d\u59cb\u5316\u5c31\u597d\u4e86\u3002 \u52a8\u6001\u89c4\u5212\u9898\u76ee \u94fe\u63a5 n\u4e2a\u9ab0\u5b50\u7684\u70b9\u6570 https://leetcode-cn.com/problems/nge-tou-zi-de-dian-shu-lcof/ \u80a1\u7968\u7cfb\u5217 \uff5c https://leetcode-cn.com/circle/article/qiAgHn/","title":"\u8fb9\u754c\u5904\u7406"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%8D%95%E8%B0%83%E6%A0%88/","text":"\u5355\u8c03\u6808 \u00b6 \u5355\u8c03\u6808\u4e00\u822c\u662f\u6307\u6808\u4e2d\u7684\u5143\u7d20\u4fdd\u6301\u7740\u5355\u8c03\u7684\u6027\u8d28\uff0c\u82e5\u5728\u67d0\u79cd\u60c5\u51b5\u4e0b\u9700\u8981\u4f60\u4fdd\u5b58\u67d0\u533a\u95f4\u6700\u5927\u7684\u6570\uff0c\u7b2c\u4e8c\u5927\u7684\u6570\uff0c\u4e14\u8be5\u533a\u95f4\u7684\u8303\u56f4\u8fd8\u4f1a\u52a8\u6001\u53d8\u5316\uff0c\u53ef\u8003\u8651\u4f7f\u7528\u5355\u8c03\u6808","title":"\u5355\u8c03\u6808"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%8D%95%E8%B0%83%E6%A0%88/#_1","text":"\u5355\u8c03\u6808\u4e00\u822c\u662f\u6307\u6808\u4e2d\u7684\u5143\u7d20\u4fdd\u6301\u7740\u5355\u8c03\u7684\u6027\u8d28\uff0c\u82e5\u5728\u67d0\u79cd\u60c5\u51b5\u4e0b\u9700\u8981\u4f60\u4fdd\u5b58\u67d0\u533a\u95f4\u6700\u5927\u7684\u6570\uff0c\u7b2c\u4e8c\u5927\u7684\u6570\uff0c\u4e14\u8be5\u533a\u95f4\u7684\u8303\u56f4\u8fd8\u4f1a\u52a8\u6001\u53d8\u5316\uff0c\u53ef\u8003\u8651\u4f7f\u7528\u5355\u8c03\u6808","title":"\u5355\u8c03\u6808"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%95%B0%E5%AD%A6/","text":"\u6570\u5b66 \u00b6 \u7ea6\u745f\u592b\u95ee\u9898 \u00b6 \u95ee\u9898\u63cf\u8ff0 \u00b6 N\u4e2a\u4eba\u56f4\u6210\u4e00\u5708\uff0c\u7b2c\u4e00\u4e2a\u4eba\u4ece1\u5f00\u59cb\u62a5\u6570\uff0c\u62a5M\u7684\u5c06\u88ab\u6740\u6389\uff0c\u4e0b\u4e00\u4e2a\u4eba\u63a5\u7740\u4ece1\u5f00\u59cb\u62a5\u3002\u5982\u6b64\u53cd\u590d\uff0c\u6700\u540e\u5269\u4e0b\u4e00\u4e2a\uff0c\u6c42\u6700\u540e\u7684\u80dc\u5229\u8005 Note \u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u8fdb\u884c\u8f6c\u5316\uff0c\u5faa\u73af\u5de6\u79fbm\u6b21\uff0c\u4e5f\u5c31\u662f\u6700\u5de6\u8fb9\u7684m\u4e2a\u4eba\u79fb\u52a8\u5230\u6700\u53f3\u8fb9\uff0c\u7136\u540e\u53bb\u6389\u6700\u540e\u4e00\u4e2a\u4eba \u5982\u4f55\u53bb\u6c42\u80dc\u5229\u8005\u5462 \u00b6 \u82e5\u6211\u5df2\u7ecf\u77e5\u9053\u5f53\u4eba\u6570\u4e3aN-1\u65f6\u7684\u80dc\u5229\u8005\u4e3a\u7b2cx\u4e2a\u4eba\uff0c\u5982\u4f55\u53bb\u63a8\u5bfc\u4eba\u6570\u4e3aN\u65f6\u7684\u80dc\u5229\u8005\uff1f \u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u8fc7\u7a0b\u53cd\u8fc7\u6765\u63a8\uff0c\u5148\u8865\u4e0a\u6700\u540e\u90a3\u4e00\u4e2a\u88ab\u53bb\u6389\u7684\u4eba\uff0c\u7136\u540e\u5faa\u73af\u53f3\u79fbm\u4f4d\u3002 \u73b0\u5728\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u8865\u4e0a\u4e86\u90a3\u4e2a\u4eba\uff0c\u90a3\u4e48\u73b0\u5728\u4eba\u6570\u4e3aN\uff0c\u961f\u4f0d\u4e2d\u7684\u6240\u6709\u4eba\u5411\u53f3\u79fbm\u4f4d\uff0c\u5219x\u7684\u53d8\u5316\u5c31\u662fx + m\uff0c\u518d\u8003\u8651\u53ef\u80fd\u79fb\u8d85\u51fa\u961f\u5217\uff0c\u56e0\u4e3a\u662f\u5faa\u73af\u53f3\u79fb\uff0c\u6240\u4ee5\u9700\u8981\u518d\u5bf9N\u53d6\u4f59\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a(x + m) % n https://leetcode-cn.com/problems/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof/","title":"\u6570\u5b66"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%95%B0%E5%AD%A6/#_1","text":"","title":"\u6570\u5b66"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%95%B0%E5%AD%A6/#_2","text":"","title":"\u7ea6\u745f\u592b\u95ee\u9898"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%95%B0%E5%AD%A6/#_3","text":"N\u4e2a\u4eba\u56f4\u6210\u4e00\u5708\uff0c\u7b2c\u4e00\u4e2a\u4eba\u4ece1\u5f00\u59cb\u62a5\u6570\uff0c\u62a5M\u7684\u5c06\u88ab\u6740\u6389\uff0c\u4e0b\u4e00\u4e2a\u4eba\u63a5\u7740\u4ece1\u5f00\u59cb\u62a5\u3002\u5982\u6b64\u53cd\u590d\uff0c\u6700\u540e\u5269\u4e0b\u4e00\u4e2a\uff0c\u6c42\u6700\u540e\u7684\u80dc\u5229\u8005 Note \u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u8fdb\u884c\u8f6c\u5316\uff0c\u5faa\u73af\u5de6\u79fbm\u6b21\uff0c\u4e5f\u5c31\u662f\u6700\u5de6\u8fb9\u7684m\u4e2a\u4eba\u79fb\u52a8\u5230\u6700\u53f3\u8fb9\uff0c\u7136\u540e\u53bb\u6389\u6700\u540e\u4e00\u4e2a\u4eba","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%95%B0%E5%AD%A6/#_4","text":"\u82e5\u6211\u5df2\u7ecf\u77e5\u9053\u5f53\u4eba\u6570\u4e3aN-1\u65f6\u7684\u80dc\u5229\u8005\u4e3a\u7b2cx\u4e2a\u4eba\uff0c\u5982\u4f55\u53bb\u63a8\u5bfc\u4eba\u6570\u4e3aN\u65f6\u7684\u80dc\u5229\u8005\uff1f \u53ef\u4ee5\u5c06\u4e0a\u9762\u7684\u8fc7\u7a0b\u53cd\u8fc7\u6765\u63a8\uff0c\u5148\u8865\u4e0a\u6700\u540e\u90a3\u4e00\u4e2a\u88ab\u53bb\u6389\u7684\u4eba\uff0c\u7136\u540e\u5faa\u73af\u53f3\u79fbm\u4f4d\u3002 \u73b0\u5728\u5047\u8bbe\u6211\u4eec\u5df2\u7ecf\u8865\u4e0a\u4e86\u90a3\u4e2a\u4eba\uff0c\u90a3\u4e48\u73b0\u5728\u4eba\u6570\u4e3aN\uff0c\u961f\u4f0d\u4e2d\u7684\u6240\u6709\u4eba\u5411\u53f3\u79fbm\u4f4d\uff0c\u5219x\u7684\u53d8\u5316\u5c31\u662fx + m\uff0c\u518d\u8003\u8651\u53ef\u80fd\u79fb\u8d85\u51fa\u961f\u5217\uff0c\u56e0\u4e3a\u662f\u5faa\u73af\u53f3\u79fb\uff0c\u6240\u4ee5\u9700\u8981\u518d\u5bf9N\u53d6\u4f59\uff0c\u6240\u4ee5\u7b54\u6848\u4e3a(x + m) % n https://leetcode-cn.com/problems/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof/","title":"\u5982\u4f55\u53bb\u6c42\u80dc\u5229\u8005\u5462"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E9%A6%96%E9%A1%B5/","text":"\u4e3b\u9875 \u00b6 Note \u5f7b\u5e95\u5403\u900f\u7684\u610f\u601d\u662f\uff0c\u4e0d\u4f46\u8981\u77e5\u9053 \u8fd9\u9898\u600e\u4e48\u505a\uff0c \u8003\u70b9\u5728\u54ea\uff0c \u8fd8\u8981\u77e5\u9053 \u8fd9\u9898\u54ea\u4e9b\u6280\u5de7\u601d\u8def\u53ef\u4ee5\u7528\u4e8e\u5176\u4ed6\u9898\uff0c\u4ee5\u53ca \u81ea\u5df1\u5f53\u65f6\u4e3a\u4ec0\u4e48\u6ca1\u60f3\u5230\uff0c\u81ea\u5df1\u6709\u4ec0\u4e48\u601d\u7ef4\u5b9a\u52bf\u6216\u8005\u77e5\u8bc6\u6f0f\u6d1e\u3002\u7136\u540e\u591a\u591a\u590d\u4e60\u5f25\u8865\u3002 Warning \u5982\u679c\u82b1\u4e86\u534a\u5c0f\u65f6\u624d\u60f3\u5230\u601d\u8def\uff0c\u6216\u8005\u662f\u770b\u4e86\u9898\u89e3\u624dAC\u7684\uff0c\u6700\u597d\u5728\u5f53\u5929\u628a\u8fd9\u9053\u9898\u5f7b\u5e95\u5403\u900f","title":"\u4e3b\u9875"},{"location":"%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E9%A6%96%E9%A1%B5/#_1","text":"Note \u5f7b\u5e95\u5403\u900f\u7684\u610f\u601d\u662f\uff0c\u4e0d\u4f46\u8981\u77e5\u9053 \u8fd9\u9898\u600e\u4e48\u505a\uff0c \u8003\u70b9\u5728\u54ea\uff0c \u8fd8\u8981\u77e5\u9053 \u8fd9\u9898\u54ea\u4e9b\u6280\u5de7\u601d\u8def\u53ef\u4ee5\u7528\u4e8e\u5176\u4ed6\u9898\uff0c\u4ee5\u53ca \u81ea\u5df1\u5f53\u65f6\u4e3a\u4ec0\u4e48\u6ca1\u60f3\u5230\uff0c\u81ea\u5df1\u6709\u4ec0\u4e48\u601d\u7ef4\u5b9a\u52bf\u6216\u8005\u77e5\u8bc6\u6f0f\u6d1e\u3002\u7136\u540e\u591a\u591a\u590d\u4e60\u5f25\u8865\u3002 Warning \u5982\u679c\u82b1\u4e86\u534a\u5c0f\u65f6\u624d\u60f3\u5230\u601d\u8def\uff0c\u6216\u8005\u662f\u770b\u4e86\u9898\u89e3\u624dAC\u7684\uff0c\u6700\u597d\u5728\u5f53\u5929\u628a\u8fd9\u9053\u9898\u5f7b\u5e95\u5403\u900f","title":"\u4e3b\u9875"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/","text":"IO\u591a\u8def\u590d\u7528 \u00b6 IO\u591a\u8def\u590d\u7528\u5728\u7f51\u7edc\u7f16\u7a0b\u4e2d\u662f\u6bd4\u4e0d\u53ef\u5c11\u7684\u4e00\u90e8\u5206\uff0c\u5e38\u89c1\u7684\u6709 Select \uff0c Poll \uff0c Epoll \uff0c Kqueue Select \u00b6 select ( int nfds , fd_set * readset , fd_set * writeset , fd_set * errorset , timeval * intval ) \u2002\u2002\u2002\u2002select\u76d1\u542c\u5f53\u524d\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c0f\u4e8enfds\u7684fd\uff0c readset \uff0c writeset \uff0c errorset \u5206\u522b\u653e\u7f6e\u6240\u5173\u5fc3\u63cf\u8ff0\u7b26\uff0c\u5f53\u51fd\u6570\u8fd4\u56de\u65f6\uff0c\u82e5 fd \u4ecd\u5728\u96c6\u5408\u4e2d\uff0c\u5219\u76f8\u5e94 fd \u6709\u5bf9\u5e94\u4e8b\u4ef6\u5df2\u51c6\u5907\uff0c\u51fd\u6570\u8fd4\u56de\u5df2\u51c6\u5907\u597d\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e2a\u6570 Note readset \uff0c writeset \uff0c errorset \u5206\u522b\u8fd4\u56de\u6240\u5173\u5fc3\u63cf\u8ff0\u7b26\u72b6\u6001\u7684\u7ed3\u679c\uff0c\u6bcf\u4e00\u4e2a\u4f4d\u5bf9\u5e94\u4e00\u4e2a\u63cf\u8ff0\u7b26\uff0c\u5f53\u8c03\u7528\u5b8c\u6210\u540e\uff0c\u82e5\u5bf9\u5e94\u4f4d\u4e3a1\uff0c\u5219\u8868\u793a\u8be5\u4e0b\u6807\u5bf9\u5e94\u7684\u63cf\u8ff0\u7b26\u4e3a\u51c6\u5907\u597d\u72b6\u6001 intval \u7b49\u4e8e NULL \u65f6\uff0c\u6c38\u8fdc\u7b49\u5f85\uff0c\u76f4\u5230\u6307\u5b9a\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u5df2\u51c6\u5907\u597d\u6216\u8005\u6355\u6349\u5230\u4e00\u4e2a\u4fe1\u53f7\u7ec8\u6b62\u6b64\u8fdb\u7a0b \u5f53 intval \u4e0d\u4e3a NULL \u65f6\uff0c\u7b49\u5f85\u6307\u5b9a\u7684\u79d2\u6570\u548c\u5fae\u79d2\u6570\uff0c\u5f53\u6307\u5b9a\u63cf\u8ff0\u7b26\u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u51c6\u5907\u597d\u65f6\uff0c\u6216\u8005\u8d85\u8fc7\u6307\u5b9a\u65f6\u95f4\uff0c\u5219\u7acb\u5373\u8fd4\u56de Warning \u5f53 intval->tv_sec==0 && intval->tv_usec==0 \u65f6\uff0c\u4e0d\u7b49\u5f85\uff0c\u6d4b\u8bd5\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u540e\u7acb\u5373\u8fd4\u56de FD_ZERO(fdset * fdset) \u5c06\u4e00\u4e2afdset\u7684\u6240\u6709\u4f4d\u7f6e\u4e3a0 FD_SET(int fd, fdset * fdset) \u5c06fd\u52a0\u5165fdset FD_CLR(int fd, fdset * fdset) \u5c06fd\u4ecefdset\u4e2d\u79fb\u9664 FD_ISSET(fd, fd_set * fdset) \u82e5fd\u5728fdset\u4e2d\uff0c\u8fd4\u56de\u975e0\uff0c\u5426\u5219\u8fd4\u56de0\uff0c\u53ef\u7528\u4e8e\u5f53select\u8fd4\u56de\u540e\u5224\u65adfd\u7684\u72b6\u6001 \u7f3a\u70b9 select \u4f1a\u4fee\u6539\u4f20\u5165\u7684\u53c2\u6570\u6570\u7ec4\uff0c\u8fd9\u4e2a\u5bf9\u4e8e\u4e00\u4e2a\u9700\u8981\u8c03\u7528\u5f88\u591a\u6b21\u7684\u51fd\u6570\uff0c\u662f\u975e\u5e38\u4e0d\u53cb\u597d\u7684\u3002 select \u5982\u679c\u4efb\u4f55\u4e00\u4e2asock(I/O stream)\u51fa\u73b0\u4e86\u6570\uff0cselect\u4ec5* \u4ec5\u4f1a\u8fd4\u56de\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u544a\u8bc9\u4f60\u662f\u90a3\u4e2asock\u4e0a\u6709\u6570\u636e\uff0c\u6240\u4ee5\u9700\u8981\u7528\u6237\u518d\u6b21\u904d\u5386fdset select \u53ea\u80fd\u76d1\u89c61024\u4e2a\u94fe\u63a5 select \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5982\u679c\u4f60\u628a\u4e00\u4e2asock\u52a0\u5165\u5230select, \u7136\u540e\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b\u5220\u9664\u6b64fd\uff0c\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u9884\u6d4b\u7684\u884c\u4e3a Poll \u00b6 int poll ( struct pollfd fds [], nfds_t nfds , int timeout ); \u2002\u2002\u2002\u2002poll\u68c0\u67e5\u4e00\u7ec4\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u770b\u770b\u5176\u4e2d\u662f\u5426\u6709\u4e3aI/O\u505a\u597d\u51c6\u5907\uff0c\u6216\u8005\u5982\u679c\u5b83\u4eec\u53d1\u751f\u4e86\u67d0\u4e9b\u4e8b\u4ef6\u3002poll()\u8fd4\u56deI/O\u51c6\u5907\u597d\u7684\u63cf\u8ff0\u7b26\u7684\u6570\u76ee\uff0c\u5f53\u53d1\u751f\u9519\u8bef\u65f6\u8fd4\u56de-1\u3002\u5982\u679c\u65f6\u95f4\u9650\u5236\u8fc7\u671f\uff0cpoll()\u8fd4\u56de0 fds\u662f\u6307\u5411pollfd\u7ed3\u6784\u6570\u7ec4\u7684\u6307\u9488 nfds\u6307\u6570\u7ec4\u5143\u7d20\u7684\u4e2a\u6570 timeout\u4e3a\u7b49\u5f85\u65f6\u95f4\uff0c-1\u65f6\u6c38\u4e45\u7b49\u5f85\uff0c\u4e3a0\u65f6\u6d4b\u8bd5\u540e\u7acb\u5373\u8fd4\u56de\uff0c\u5176\u4f59\u503c\u65f6\u4e3a\u7b49\u5f85timeout\u6beb\u79d2 struct pollfd { int fd ; /* file descriptor */ short events ; /* events to look for */ short revents ; /* events returned */ }; Warning POLLERR | POLLHUP | POLLNVAL \u8fd9\u4e09\u4e2a\u503c\u5373\u4f7f\u4e0d\u8bbe\u7f6e\u5728events\u4e2d\uff0c\u4e5f\u53ef\u80fd\u51fa\u73b0\u5728revents events\u6807\u5fd7 \u6548\u679c POLLIN \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u53d6\u9ad8\u4f18\u5148\u7ea7\u6570\u636e\u4ee5\u5916\u7684\u6570\u636e POLLOUT \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u5199\u666e\u901a\u6570\u636e POLLERR \u5df2\u51fa\u9519 POLLHUP \u5df2\u6302\u65ad POLLNVAL \u63cf\u8ff0\u7b26\u6ca1\u6709\u5f15\u7528\u4e00\u4e2a\u6253\u5f00\u6587\u4ef6 POLLRDNORM \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u53d6\u666e\u901a\u6570\u636e POLLRDBAND \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u53d6\u4f18\u5148\u7ea7\u6570\u636e\uff0c\u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u53d6\u9ad8\u4f18\u5148\u7ea7\u7684\u6570\u636e POLLWRNORM \u540cPOLLOUT POLLWRBAND \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u5199\u4f18\u5148\u7ea7\u6570\u636e \u4f18\u70b9\u53ca\u7f3a\u70b9 poll\u53bb\u6389\u4e861024\u4e2a\u94fe\u63a5\u7684\u9650\u5236 poll\u4e0d\u9700\u8981\u6bcf\u6b21\u91cd\u65b0\u8bbe\u7f6e\u6570\u7ec4 poll\u4ecd\u7136\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 Epoll \u00b6 int epoll_create ( int size ); \u51fd\u6570\u521b\u5efa\u4e00\u4e2aepoll\u53e5\u67c4\uff0c\u53c2\u6570size\u8868\u660e\u5185\u6838\u8981\u76d1\u542c\u7684\u63cf\u8ff0\u7b26\u6570\u91cf\u3002\u8c03\u7528\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2aepoll\u53e5\u67c4\u63cf\u8ff0\u7b26\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1\u3002 int epoll_ctl ( int epfd , int op , int fd , struct epoll_event * event ); struct epoll_event { __uint32_t events ; /* Epoll events */ epoll_data_t data ; /* User data variable */ }; epfd \u8868\u793aepoll\u53e5\u67c4 op \u6548\u679c EPOLL_CTL_ADD \u6ce8\u518c\u65b0\u7684fd\u5230epfd\u4e2d EPOLL_CTL_MOD \u4fee\u6539\u5df2\u6ce8\u518c\u7684fd\u7684\u76d1\u542c\u4e8b\u4ef6 EPOLL_CTL_DEL \u4eceepfd\u4e2d\u5220\u9664\u4e00\u4e2afd fd \u662f\u8981\u76d1\u542c\u7684\u63cf\u8ff0\u7b26 event \u8868\u793a\u8981\u76d1\u542c\u7684\u4e8b\u4ef6 int epoll_wait ( int epfd , struct epoll_event * events , int maxevents , int timeout ); epoll_wait \u51fd\u6570\u7b49\u5f85\u4e8b\u4ef6\u7684\u5c31\u7eea\uff0c\u6210\u529f\u65f6\u8fd4\u56de\u5c31\u7eea\u7684\u4e8b\u4ef6\u6570\u76ee\uff0c\u8c03\u7528\u5931\u8d25\u65f6\u8fd4\u56de -1\uff0c\u7b49\u5f85\u8d85\u65f6\u8fd4\u56de 0\u3002 epfd \u662fepoll\u53e5\u67c4 events \u8868\u793a\u4ece\u5185\u6838\u5f97\u5230\u7684\u5c31\u7eea\u4e8b\u4ef6\u96c6\u5408 maxevents \u544a\u8bc9\u5185\u6838events\u7684\u5927\u5c0f timeout \u8868\u793a\u7b49\u5f85\u65f6\u95f4 typedef union epoll_data { void * ptr ; int fd ; __uint32_t u32 ; __uint64_t u64 ; } epoll_data_t ; \u4f18\u70b9 epoll \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002 epoll \u4e0d\u4ec5\u544a\u8bc9\u4f60sock\u7ec4\u91cc\u9762\u6570\u636e\uff0c\u8fd8\u4f1a\u544a\u8bc9\u4f60\u5177\u4f53\u54ea\u4e2asock\u6709\u6570\u636e epoll \u652f\u6301ET\u6a21\u5f0f \u8fb9\u7f18\u89e6\u53d1\u548c\u6c34\u5e73\u89e6\u53d1 \u6c34\u5e73\u89e6\u53d1\uff08LT\uff09\uff1a\u9ed8\u8ba4\u5de5\u4f5c\u6a21\u5f0f\uff0c\u5373\u5f53epoll_wait\u68c0\u6d4b\u5230\u67d0\u63cf\u8ff0\u7b26\u4e8b\u4ef6\u5c31\u7eea\u5e76\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4e0d\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\uff1b\u4e0b\u6b21\u8c03\u7528epoll_wait\u65f6\uff0c\u4f1a\u518d\u6b21\u901a\u77e5\u6b64\u4e8b\u4ef6 \u8fb9\u7f18\u89e6\u53d1\uff08ET\uff09\uff1a \u5f53epoll_wait\u68c0\u6d4b\u5230\u67d0\u63cf\u8ff0\u7b26\u4e8b\u4ef6\u5c31\u7eea\u5e76\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\u3002\u5982\u679c\u4e0d\u5904\u7406\uff0c\u4e0b\u6b21\u8c03\u7528epoll_wait\u65f6\uff0c\u4e0d\u4f1a\u518d\u6b21\u901a\u77e5\u6b64\u4e8b\u4ef6\u3002\uff08\u76f4\u5230\u4f60\u505a\u4e86\u67d0\u4e9b\u64cd\u4f5c\u5bfc\u81f4\u8be5\u63cf\u8ff0\u7b26\u53d8\u6210\u672a\u5c31\u7eea\u72b6\u6001\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fb9\u7f18\u89e6\u53d1\u53ea\u5728\u72b6\u6001\u7531\u672a\u5c31\u7eea\u53d8\u4e3a\u5c31\u7eea\u65f6\u53ea\u901a\u77e5\u4e00\u6b21\uff09 Kqueue \u00b6 int kqueue ( void ); \u521b\u5efa\u4e00\u4e2a kqueue \u6587\u4ef6\u63cf\u8ff0\u7b26 int kevent ( int kq , const struct kevent * changelist , int nchanges , struct kevent * eventlist , int nevents , const struct timespec * timeout ); \u53ef\u7528\u4e8e\u5411kq\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u65b0\u7684kevent \u53ef\u7528\u4e8e\u7b49\u5f85IO\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u8fd4\u56de\u503c\u4e3a\u5df2\u51c6\u5907\u597dIO\u4e8b\u4ef6\u7684\u4e2a\u6570\uff0c\u4ee3\u8868\u7740eventlist\u7684\u524dn\u4e2a\u5143\u7d20 kq \u662fkqueue\u6587\u4ef6\u63cf\u8ff0\u7b26 changelist \u662f\u4e00\u4e2astruct event\u6570\u7ec4\uff0c\u5305\u542b\u6240\u6709\u8981\u66f4\u6539kevent nchanges \u8868\u793achangelist\u7684\u957f\u5ea6 eventlist \u662f\u4e00\u4e2astruct event\u6570\u7ec4\uff0c\u7528\u4e8e\u63a5\u6536\u4e8b\u4ef6\u5df2\u51c6\u5907\u597d\u7684kevent nevents eventlist\u7684\u5927\u5c0f timeout \u7b49\u5f85\u7684\u8d85\u65f6\u65f6\u95f4 Warning changelist \u901a\u5e38\u4e0d\u4e0e eventlist \u540c\u65f6\u4f7f\u7528 \u6dfb\u52a0event\u65f6\u901a\u5e38\u4f7f\u7528 EV_SET ( & kev , fd , EVFILT_READ , EV_ADD , 0 , 0 , NULL ); kevent ( kq , & kev , 1 , NULL , 0 , NULL ); \u7b49\u5f85\u65f6\u901a\u5e38\u4f7f\u7528 kevent ( kq , NULL , 0 , eventlist , nevents , & timeout ) struct kevent { uintptr_t ident ; /* identifier for this event */ int16_t filter ; /* filter for event */ uint16_t flags ; /* general flags */ uint32_t fflags ; /* filter-specific flags */ intptr_t data ; /* filter-specific data */ void * udata ; /* opaque user data identifier */ }; EV_SET ( & kev , ident , filter , flags , fflags , data , udata ); kev \u4e3a struct kevent ident \u4e3a fd fflags , data , udata \u901a\u5e38\u8bbe\u7f6e\u4e3a0 flags \u6548\u679c EV_ADD \u6dfb\u52a0\u4e8b\u4ef6\u5230kqueue EV_DELETE \u4ecekqueue\u4e2d\u79fb\u9664\u4e8b\u4ef6 filter \u6548\u679c EVFILT_READ \u5728\u6709\u6570\u636e\u53ef\u8bfb\u65f6\u8fd4\u56de EVFILT_READ \u5728\u6709\u6570\u636e\u53ef\u5199\u65f6\u8fd4\u56de","title":"IO\u591a\u8def\u590d\u7528"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/#io","text":"IO\u591a\u8def\u590d\u7528\u5728\u7f51\u7edc\u7f16\u7a0b\u4e2d\u662f\u6bd4\u4e0d\u53ef\u5c11\u7684\u4e00\u90e8\u5206\uff0c\u5e38\u89c1\u7684\u6709 Select \uff0c Poll \uff0c Epoll \uff0c Kqueue","title":"IO\u591a\u8def\u590d\u7528"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/#select","text":"select ( int nfds , fd_set * readset , fd_set * writeset , fd_set * errorset , timeval * intval ) \u2002\u2002\u2002\u2002select\u76d1\u542c\u5f53\u524d\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c0f\u4e8enfds\u7684fd\uff0c readset \uff0c writeset \uff0c errorset \u5206\u522b\u653e\u7f6e\u6240\u5173\u5fc3\u63cf\u8ff0\u7b26\uff0c\u5f53\u51fd\u6570\u8fd4\u56de\u65f6\uff0c\u82e5 fd \u4ecd\u5728\u96c6\u5408\u4e2d\uff0c\u5219\u76f8\u5e94 fd \u6709\u5bf9\u5e94\u4e8b\u4ef6\u5df2\u51c6\u5907\uff0c\u51fd\u6570\u8fd4\u56de\u5df2\u51c6\u5907\u597d\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e2a\u6570 Note readset \uff0c writeset \uff0c errorset \u5206\u522b\u8fd4\u56de\u6240\u5173\u5fc3\u63cf\u8ff0\u7b26\u72b6\u6001\u7684\u7ed3\u679c\uff0c\u6bcf\u4e00\u4e2a\u4f4d\u5bf9\u5e94\u4e00\u4e2a\u63cf\u8ff0\u7b26\uff0c\u5f53\u8c03\u7528\u5b8c\u6210\u540e\uff0c\u82e5\u5bf9\u5e94\u4f4d\u4e3a1\uff0c\u5219\u8868\u793a\u8be5\u4e0b\u6807\u5bf9\u5e94\u7684\u63cf\u8ff0\u7b26\u4e3a\u51c6\u5907\u597d\u72b6\u6001 intval \u7b49\u4e8e NULL \u65f6\uff0c\u6c38\u8fdc\u7b49\u5f85\uff0c\u76f4\u5230\u6307\u5b9a\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u5df2\u51c6\u5907\u597d\u6216\u8005\u6355\u6349\u5230\u4e00\u4e2a\u4fe1\u53f7\u7ec8\u6b62\u6b64\u8fdb\u7a0b \u5f53 intval \u4e0d\u4e3a NULL \u65f6\uff0c\u7b49\u5f85\u6307\u5b9a\u7684\u79d2\u6570\u548c\u5fae\u79d2\u6570\uff0c\u5f53\u6307\u5b9a\u63cf\u8ff0\u7b26\u4e2d\u7684\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u51c6\u5907\u597d\u65f6\uff0c\u6216\u8005\u8d85\u8fc7\u6307\u5b9a\u65f6\u95f4\uff0c\u5219\u7acb\u5373\u8fd4\u56de Warning \u5f53 intval->tv_sec==0 && intval->tv_usec==0 \u65f6\uff0c\u4e0d\u7b49\u5f85\uff0c\u6d4b\u8bd5\u6240\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u540e\u7acb\u5373\u8fd4\u56de FD_ZERO(fdset * fdset) \u5c06\u4e00\u4e2afdset\u7684\u6240\u6709\u4f4d\u7f6e\u4e3a0 FD_SET(int fd, fdset * fdset) \u5c06fd\u52a0\u5165fdset FD_CLR(int fd, fdset * fdset) \u5c06fd\u4ecefdset\u4e2d\u79fb\u9664 FD_ISSET(fd, fd_set * fdset) \u82e5fd\u5728fdset\u4e2d\uff0c\u8fd4\u56de\u975e0\uff0c\u5426\u5219\u8fd4\u56de0\uff0c\u53ef\u7528\u4e8e\u5f53select\u8fd4\u56de\u540e\u5224\u65adfd\u7684\u72b6\u6001 \u7f3a\u70b9 select \u4f1a\u4fee\u6539\u4f20\u5165\u7684\u53c2\u6570\u6570\u7ec4\uff0c\u8fd9\u4e2a\u5bf9\u4e8e\u4e00\u4e2a\u9700\u8981\u8c03\u7528\u5f88\u591a\u6b21\u7684\u51fd\u6570\uff0c\u662f\u975e\u5e38\u4e0d\u53cb\u597d\u7684\u3002 select \u5982\u679c\u4efb\u4f55\u4e00\u4e2asock(I/O stream)\u51fa\u73b0\u4e86\u6570\uff0cselect\u4ec5* \u4ec5\u4f1a\u8fd4\u56de\uff0c\u4f46\u662f\u5e76\u4e0d\u4f1a\u544a\u8bc9\u4f60\u662f\u90a3\u4e2asock\u4e0a\u6709\u6570\u636e\uff0c\u6240\u4ee5\u9700\u8981\u7528\u6237\u518d\u6b21\u904d\u5386fdset select \u53ea\u80fd\u76d1\u89c61024\u4e2a\u94fe\u63a5 select \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5982\u679c\u4f60\u628a\u4e00\u4e2asock\u52a0\u5165\u5230select, \u7136\u540e\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b\u5220\u9664\u6b64fd\uff0c\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u9884\u6d4b\u7684\u884c\u4e3a","title":"Select"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/#poll","text":"int poll ( struct pollfd fds [], nfds_t nfds , int timeout ); \u2002\u2002\u2002\u2002poll\u68c0\u67e5\u4e00\u7ec4\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u770b\u770b\u5176\u4e2d\u662f\u5426\u6709\u4e3aI/O\u505a\u597d\u51c6\u5907\uff0c\u6216\u8005\u5982\u679c\u5b83\u4eec\u53d1\u751f\u4e86\u67d0\u4e9b\u4e8b\u4ef6\u3002poll()\u8fd4\u56deI/O\u51c6\u5907\u597d\u7684\u63cf\u8ff0\u7b26\u7684\u6570\u76ee\uff0c\u5f53\u53d1\u751f\u9519\u8bef\u65f6\u8fd4\u56de-1\u3002\u5982\u679c\u65f6\u95f4\u9650\u5236\u8fc7\u671f\uff0cpoll()\u8fd4\u56de0 fds\u662f\u6307\u5411pollfd\u7ed3\u6784\u6570\u7ec4\u7684\u6307\u9488 nfds\u6307\u6570\u7ec4\u5143\u7d20\u7684\u4e2a\u6570 timeout\u4e3a\u7b49\u5f85\u65f6\u95f4\uff0c-1\u65f6\u6c38\u4e45\u7b49\u5f85\uff0c\u4e3a0\u65f6\u6d4b\u8bd5\u540e\u7acb\u5373\u8fd4\u56de\uff0c\u5176\u4f59\u503c\u65f6\u4e3a\u7b49\u5f85timeout\u6beb\u79d2 struct pollfd { int fd ; /* file descriptor */ short events ; /* events to look for */ short revents ; /* events returned */ }; Warning POLLERR | POLLHUP | POLLNVAL \u8fd9\u4e09\u4e2a\u503c\u5373\u4f7f\u4e0d\u8bbe\u7f6e\u5728events\u4e2d\uff0c\u4e5f\u53ef\u80fd\u51fa\u73b0\u5728revents events\u6807\u5fd7 \u6548\u679c POLLIN \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u53d6\u9ad8\u4f18\u5148\u7ea7\u6570\u636e\u4ee5\u5916\u7684\u6570\u636e POLLOUT \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u5199\u666e\u901a\u6570\u636e POLLERR \u5df2\u51fa\u9519 POLLHUP \u5df2\u6302\u65ad POLLNVAL \u63cf\u8ff0\u7b26\u6ca1\u6709\u5f15\u7528\u4e00\u4e2a\u6253\u5f00\u6587\u4ef6 POLLRDNORM \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u53d6\u666e\u901a\u6570\u636e POLLRDBAND \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u53d6\u4f18\u5148\u7ea7\u6570\u636e\uff0c\u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u8bfb\u53d6\u9ad8\u4f18\u5148\u7ea7\u7684\u6570\u636e POLLWRNORM \u540cPOLLOUT POLLWRBAND \u53ef\u4ee5\u4e0d\u963b\u585e\u7684\u5199\u4f18\u5148\u7ea7\u6570\u636e \u4f18\u70b9\u53ca\u7f3a\u70b9 poll\u53bb\u6389\u4e861024\u4e2a\u94fe\u63a5\u7684\u9650\u5236 poll\u4e0d\u9700\u8981\u6bcf\u6b21\u91cd\u65b0\u8bbe\u7f6e\u6570\u7ec4 poll\u4ecd\u7136\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684","title":"Poll"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/#epoll","text":"int epoll_create ( int size ); \u51fd\u6570\u521b\u5efa\u4e00\u4e2aepoll\u53e5\u67c4\uff0c\u53c2\u6570size\u8868\u660e\u5185\u6838\u8981\u76d1\u542c\u7684\u63cf\u8ff0\u7b26\u6570\u91cf\u3002\u8c03\u7528\u6210\u529f\u65f6\u8fd4\u56de\u4e00\u4e2aepoll\u53e5\u67c4\u63cf\u8ff0\u7b26\uff0c\u5931\u8d25\u65f6\u8fd4\u56de-1\u3002 int epoll_ctl ( int epfd , int op , int fd , struct epoll_event * event ); struct epoll_event { __uint32_t events ; /* Epoll events */ epoll_data_t data ; /* User data variable */ }; epfd \u8868\u793aepoll\u53e5\u67c4 op \u6548\u679c EPOLL_CTL_ADD \u6ce8\u518c\u65b0\u7684fd\u5230epfd\u4e2d EPOLL_CTL_MOD \u4fee\u6539\u5df2\u6ce8\u518c\u7684fd\u7684\u76d1\u542c\u4e8b\u4ef6 EPOLL_CTL_DEL \u4eceepfd\u4e2d\u5220\u9664\u4e00\u4e2afd fd \u662f\u8981\u76d1\u542c\u7684\u63cf\u8ff0\u7b26 event \u8868\u793a\u8981\u76d1\u542c\u7684\u4e8b\u4ef6 int epoll_wait ( int epfd , struct epoll_event * events , int maxevents , int timeout ); epoll_wait \u51fd\u6570\u7b49\u5f85\u4e8b\u4ef6\u7684\u5c31\u7eea\uff0c\u6210\u529f\u65f6\u8fd4\u56de\u5c31\u7eea\u7684\u4e8b\u4ef6\u6570\u76ee\uff0c\u8c03\u7528\u5931\u8d25\u65f6\u8fd4\u56de -1\uff0c\u7b49\u5f85\u8d85\u65f6\u8fd4\u56de 0\u3002 epfd \u662fepoll\u53e5\u67c4 events \u8868\u793a\u4ece\u5185\u6838\u5f97\u5230\u7684\u5c31\u7eea\u4e8b\u4ef6\u96c6\u5408 maxevents \u544a\u8bc9\u5185\u6838events\u7684\u5927\u5c0f timeout \u8868\u793a\u7b49\u5f85\u65f6\u95f4 typedef union epoll_data { void * ptr ; int fd ; __uint32_t u32 ; __uint64_t u64 ; } epoll_data_t ; \u4f18\u70b9 epoll \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002 epoll \u4e0d\u4ec5\u544a\u8bc9\u4f60sock\u7ec4\u91cc\u9762\u6570\u636e\uff0c\u8fd8\u4f1a\u544a\u8bc9\u4f60\u5177\u4f53\u54ea\u4e2asock\u6709\u6570\u636e epoll \u652f\u6301ET\u6a21\u5f0f \u8fb9\u7f18\u89e6\u53d1\u548c\u6c34\u5e73\u89e6\u53d1 \u6c34\u5e73\u89e6\u53d1\uff08LT\uff09\uff1a\u9ed8\u8ba4\u5de5\u4f5c\u6a21\u5f0f\uff0c\u5373\u5f53epoll_wait\u68c0\u6d4b\u5230\u67d0\u63cf\u8ff0\u7b26\u4e8b\u4ef6\u5c31\u7eea\u5e76\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u4e0d\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\uff1b\u4e0b\u6b21\u8c03\u7528epoll_wait\u65f6\uff0c\u4f1a\u518d\u6b21\u901a\u77e5\u6b64\u4e8b\u4ef6 \u8fb9\u7f18\u89e6\u53d1\uff08ET\uff09\uff1a \u5f53epoll_wait\u68c0\u6d4b\u5230\u67d0\u63cf\u8ff0\u7b26\u4e8b\u4ef6\u5c31\u7eea\u5e76\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0c\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u7acb\u5373\u5904\u7406\u8be5\u4e8b\u4ef6\u3002\u5982\u679c\u4e0d\u5904\u7406\uff0c\u4e0b\u6b21\u8c03\u7528epoll_wait\u65f6\uff0c\u4e0d\u4f1a\u518d\u6b21\u901a\u77e5\u6b64\u4e8b\u4ef6\u3002\uff08\u76f4\u5230\u4f60\u505a\u4e86\u67d0\u4e9b\u64cd\u4f5c\u5bfc\u81f4\u8be5\u63cf\u8ff0\u7b26\u53d8\u6210\u672a\u5c31\u7eea\u72b6\u6001\u4e86\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fb9\u7f18\u89e6\u53d1\u53ea\u5728\u72b6\u6001\u7531\u672a\u5c31\u7eea\u53d8\u4e3a\u5c31\u7eea\u65f6\u53ea\u901a\u77e5\u4e00\u6b21\uff09","title":"Epoll"},{"location":"%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/#kqueue","text":"int kqueue ( void ); \u521b\u5efa\u4e00\u4e2a kqueue \u6587\u4ef6\u63cf\u8ff0\u7b26 int kevent ( int kq , const struct kevent * changelist , int nchanges , struct kevent * eventlist , int nevents , const struct timespec * timeout ); \u53ef\u7528\u4e8e\u5411kq\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u65b0\u7684kevent \u53ef\u7528\u4e8e\u7b49\u5f85IO\u4e8b\u4ef6\u7684\u53d1\u751f\uff0c\u8fd4\u56de\u503c\u4e3a\u5df2\u51c6\u5907\u597dIO\u4e8b\u4ef6\u7684\u4e2a\u6570\uff0c\u4ee3\u8868\u7740eventlist\u7684\u524dn\u4e2a\u5143\u7d20 kq \u662fkqueue\u6587\u4ef6\u63cf\u8ff0\u7b26 changelist \u662f\u4e00\u4e2astruct event\u6570\u7ec4\uff0c\u5305\u542b\u6240\u6709\u8981\u66f4\u6539kevent nchanges \u8868\u793achangelist\u7684\u957f\u5ea6 eventlist \u662f\u4e00\u4e2astruct event\u6570\u7ec4\uff0c\u7528\u4e8e\u63a5\u6536\u4e8b\u4ef6\u5df2\u51c6\u5907\u597d\u7684kevent nevents eventlist\u7684\u5927\u5c0f timeout \u7b49\u5f85\u7684\u8d85\u65f6\u65f6\u95f4 Warning changelist \u901a\u5e38\u4e0d\u4e0e eventlist \u540c\u65f6\u4f7f\u7528 \u6dfb\u52a0event\u65f6\u901a\u5e38\u4f7f\u7528 EV_SET ( & kev , fd , EVFILT_READ , EV_ADD , 0 , 0 , NULL ); kevent ( kq , & kev , 1 , NULL , 0 , NULL ); \u7b49\u5f85\u65f6\u901a\u5e38\u4f7f\u7528 kevent ( kq , NULL , 0 , eventlist , nevents , & timeout ) struct kevent { uintptr_t ident ; /* identifier for this event */ int16_t filter ; /* filter for event */ uint16_t flags ; /* general flags */ uint32_t fflags ; /* filter-specific flags */ intptr_t data ; /* filter-specific data */ void * udata ; /* opaque user data identifier */ }; EV_SET ( & kev , ident , filter , flags , fflags , data , udata ); kev \u4e3a struct kevent ident \u4e3a fd fflags , data , udata \u901a\u5e38\u8bbe\u7f6e\u4e3a0 flags \u6548\u679c EV_ADD \u6dfb\u52a0\u4e8b\u4ef6\u5230kqueue EV_DELETE \u4ecekqueue\u4e2d\u79fb\u9664\u4e8b\u4ef6 filter \u6548\u679c EVFILT_READ \u5728\u6709\u6570\u636e\u53ef\u8bfb\u65f6\u8fd4\u56de EVFILT_READ \u5728\u6709\u6570\u636e\u53ef\u5199\u65f6\u8fd4\u56de","title":"Kqueue"}]}